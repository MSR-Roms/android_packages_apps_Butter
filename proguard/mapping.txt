android.support.v13.app.FragmentCompat -> android.support.v13.app.FragmentCompat:
    android.support.v13.app.FragmentCompat$FragmentCompatImpl IMPL -> a
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentCompat$BaseFragmentCompatImpl -> android.support.v13.app.a:
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentCompat$FragmentCompatImpl -> android.support.v13.app.b:
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentCompat$ICSFragmentCompatImpl -> android.support.v13.app.c:
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
android.support.v13.app.FragmentCompat$ICSMR1FragmentCompatImpl -> android.support.v13.app.d:
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentCompatICS -> android.support.v13.app.e:
    void setMenuVisibility(android.app.Fragment,boolean) -> setMenuVisibility
android.support.v13.app.FragmentCompatICSMR1 -> android.support.v13.app.f:
    void setUserVisibleHint(android.app.Fragment,boolean) -> setUserVisibleHint
android.support.v13.app.FragmentPagerAdapter -> android.support.v13.app.FragmentPagerAdapter:
    android.app.FragmentManager mFragmentManager -> a
    android.app.FragmentTransaction mCurTransaction -> b
    android.app.Fragment mCurrentPrimaryItem -> c
    android.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> a
android.support.v13.app.FragmentStatePagerAdapter -> android.support.v13.app.FragmentStatePagerAdapter:
    android.app.FragmentManager mFragmentManager -> a
    android.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.app.Fragment mCurrentPrimaryItem -> e
    android.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v13.app.FragmentTabHost -> android.support.v13.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v13.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setup(android.content.Context,android.app.FragmentManager) -> setup
    void setup(android.content.Context,android.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.app.FragmentTransaction doTabChanged(java.lang.String,android.app.FragmentTransaction) -> a
android.support.v13.app.FragmentTabHost$DummyTabFactory -> android.support.v13.app.g:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v13.app.FragmentTabHost$SavedState -> android.support.v13.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v13.app.FragmentTabHost$SavedState$1 -> android.support.v13.app.h:
    android.support.v13.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v13.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v13.app.FragmentTabHost$TabInfo -> android.support.v13.app.i:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.app.Fragment fragment -> d
    android.app.Fragment access$102(android.support.v13.app.FragmentTabHost$TabInfo,android.app.Fragment) -> a
    android.app.Fragment access$100(android.support.v13.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v13.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v13.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v13.app.FragmentTabHost$TabInfo) -> d
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> registerContentObserver
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.MenuCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int mSeenPositionMin -> mSeenPositionMin
    int mSeenPositionMax -> mSeenPositionMax
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat from(android.content.Context) -> from
    boolean isFinished() -> isFinished
    int getDuration() -> getDuration
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity() -> getCurrVelocity
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(android.widget.Scroller) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.androidquery.AQuery -> com.androidquery.AQuery:
com.androidquery.AbstractAQuery -> com.androidquery.AbstractAQuery:
    android.view.View root -> a
    android.app.Activity act -> b
    android.content.Context context -> c
    android.view.View view -> view
    java.lang.Object progress -> progress
    com.androidquery.auth.AccountHandle ah -> ah
    com.androidquery.callback.Transformer trans -> d
    java.lang.reflect.Constructor constructor -> e
    java.lang.Class[] ON_CLICK_SIG -> f
    java.lang.Class[] ON_ITEM_SIG -> g
    java.lang.Class[] ON_SCROLLED_STATE_SIG -> h
    java.lang.Class[] TEXT_CHANGE_SIG -> i
    java.lang.Class[] PENDING_TRANSITION_SIG -> j
    java.lang.Class[] OVER_SCROLL_SIG -> k
    java.lang.Class[] LAYER_TYPE_SIG -> l
    java.util.WeakHashMap dialogs -> m
    android.view.LayoutInflater inflater -> n
    com.androidquery.AbstractAQuery create(android.view.View) -> create
    java.lang.reflect.Constructor getConstructor() -> a
    android.view.View findView(int) -> a
    com.androidquery.AbstractAQuery find(int) -> find
    com.androidquery.AbstractAQuery parent(int) -> parent
    com.androidquery.AbstractAQuery recycle(android.view.View) -> recycle
    android.view.View getView() -> getView
    com.androidquery.AbstractAQuery id(int) -> id
    com.androidquery.AbstractAQuery id(android.view.View) -> id
    com.androidquery.AbstractAQuery id(int[]) -> id
    com.androidquery.AbstractAQuery progress(int) -> progress
    com.androidquery.AbstractAQuery progress(android.view.View) -> progress
    com.androidquery.AbstractAQuery progress(android.app.Dialog) -> progress
    com.androidquery.AbstractAQuery auth(com.androidquery.auth.AccountHandle) -> auth
    com.androidquery.AbstractAQuery transformer(com.androidquery.callback.Transformer) -> transformer
    com.androidquery.AbstractAQuery rating(float) -> rating
    com.androidquery.AbstractAQuery text(int) -> text
    com.androidquery.AbstractAQuery text(int,java.lang.Object[]) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence,boolean) -> text
    com.androidquery.AbstractAQuery text(android.text.Spanned) -> text
    com.androidquery.AbstractAQuery textColor(int) -> textColor
    com.androidquery.AbstractAQuery adapter(android.widget.Adapter) -> adapter
    com.androidquery.AbstractAQuery adapter(android.widget.ExpandableListAdapter) -> adapter
    com.androidquery.AbstractAQuery image(int) -> image
    com.androidquery.AbstractAQuery image(android.graphics.drawable.Drawable) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap) -> image
    com.androidquery.AbstractAQuery image(java.lang.String) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float) -> image
    com.androidquery.AbstractAQuery image(com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.io.File,int) -> image
    com.androidquery.AbstractAQuery image(java.io.File,boolean,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap,float) -> image
    com.androidquery.AbstractAQuery tag(java.lang.Object) -> tag
    com.androidquery.AbstractAQuery tag(int,java.lang.Object) -> tag
    com.androidquery.AbstractAQuery transparent(boolean) -> transparent
    com.androidquery.AbstractAQuery enabled(boolean) -> enabled
    com.androidquery.AbstractAQuery checked(boolean) -> checked
    boolean isChecked() -> isChecked
    com.androidquery.AbstractAQuery clickable(boolean) -> clickable
    com.androidquery.AbstractAQuery gone() -> gone
    com.androidquery.AbstractAQuery invisible() -> invisible
    com.androidquery.AbstractAQuery visible() -> visible
    com.androidquery.AbstractAQuery background(int) -> background
    com.androidquery.AbstractAQuery backgroundColor(int) -> backgroundColor
    com.androidquery.AbstractAQuery dataChanged() -> dataChanged
    boolean isExist() -> isExist
    java.lang.Object getTag() -> getTag
    java.lang.Object getTag(int) -> getTag
    android.widget.ImageView getImageView() -> getImageView
    android.widget.Gallery getGallery() -> getGallery
    android.widget.TextView getTextView() -> getTextView
    android.widget.EditText getEditText() -> getEditText
    android.widget.ProgressBar getProgressBar() -> getProgressBar
    android.widget.Button getButton() -> getButton
    android.widget.CheckBox getCheckBox() -> getCheckBox
    android.widget.ListView getListView() -> getListView
    android.widget.ExpandableListView getExpandableListView() -> getExpandableListView
    android.widget.GridView getGridView() -> getGridView
    android.widget.RatingBar getRatingBar() -> getRatingBar
    android.webkit.WebView getWebView() -> getWebView
    android.widget.Spinner getSpinner() -> getSpinner
    android.text.Editable getEditable() -> getEditable
    java.lang.CharSequence getText() -> getText
    java.lang.Object getSelectedItem() -> getSelectedItem
    com.androidquery.AbstractAQuery clicked(java.lang.Object,java.lang.String) -> clicked
    com.androidquery.AbstractAQuery clicked(android.view.View$OnClickListener) -> clicked
    com.androidquery.AbstractAQuery longClicked(java.lang.Object,java.lang.String) -> longClicked
    com.androidquery.AbstractAQuery longClicked(android.view.View$OnLongClickListener) -> longClicked
    com.androidquery.AbstractAQuery itemClicked(java.lang.Object,java.lang.String) -> itemClicked
    com.androidquery.AbstractAQuery itemClicked(android.widget.AdapterView$OnItemClickListener) -> itemClicked
    com.androidquery.AbstractAQuery itemSelected(java.lang.Object,java.lang.String) -> itemSelected
    com.androidquery.AbstractAQuery itemSelected(android.widget.AdapterView$OnItemSelectedListener) -> itemSelected
    com.androidquery.AbstractAQuery setSelection(int) -> setSelection
    com.androidquery.AbstractAQuery scrolledBottom(java.lang.Object,java.lang.String) -> scrolledBottom
    com.androidquery.util.Common setScrollListener() -> b
    com.androidquery.AbstractAQuery scrolled(android.widget.AbsListView$OnScrollListener) -> scrolled
    com.androidquery.AbstractAQuery textChanged(java.lang.Object,java.lang.String) -> textChanged
    com.androidquery.AbstractAQuery overridePendingTransition5(int,int) -> overridePendingTransition5
    com.androidquery.AbstractAQuery setOverScrollMode9(int) -> setOverScrollMode9
    com.androidquery.AbstractAQuery setLayerType11(int,android.graphics.Paint) -> setLayerType11
    java.lang.Object invoke(java.lang.String,java.lang.Class[],java.lang.Object[]) -> invoke
    com.androidquery.AbstractAQuery hardwareAccelerated11() -> hardwareAccelerated11
    com.androidquery.AbstractAQuery clear() -> clear
    com.androidquery.AbstractAQuery margin(float,float,float,float) -> margin
    com.androidquery.AbstractAQuery width(int) -> width
    com.androidquery.AbstractAQuery height(int) -> height
    com.androidquery.AbstractAQuery width(int,boolean) -> width
    com.androidquery.AbstractAQuery height(int,boolean) -> height
    void size(boolean,int,boolean) -> a
    android.content.Context getContext() -> getContext
    com.androidquery.AbstractAQuery ajax(com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery invoke(com.androidquery.callback.AbstractAjaxCallback) -> invoke
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery sync(com.androidquery.callback.AjaxCallback) -> sync
    com.androidquery.AbstractAQuery cache(java.lang.String,long) -> cache
    com.androidquery.AbstractAQuery ajaxCancel() -> ajaxCancel
    java.io.File getCachedFile(java.lang.String) -> getCachedFile
    com.androidquery.AbstractAQuery invalidate(java.lang.String) -> invalidate
    android.graphics.Bitmap getCachedImage(java.lang.String) -> getCachedImage
    android.graphics.Bitmap getCachedImage(java.lang.String,int) -> getCachedImage
    android.graphics.Bitmap getCachedImage(int) -> getCachedImage
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    boolean shouldDelay(int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    java.io.File makeSharedFile(java.lang.String,java.lang.String) -> makeSharedFile
    com.androidquery.AbstractAQuery animate(int) -> animate
    com.androidquery.AbstractAQuery animate(int,android.view.animation.Animation$AnimationListener) -> animate
    com.androidquery.AbstractAQuery animate(android.view.animation.Animation) -> animate
    com.androidquery.AbstractAQuery click() -> click
    com.androidquery.AbstractAQuery longClick() -> longClick
    com.androidquery.AbstractAQuery show(android.app.Dialog) -> show
    com.androidquery.AbstractAQuery dismiss(android.app.Dialog) -> dismiss
    com.androidquery.AbstractAQuery dismiss() -> dismiss
    com.androidquery.AbstractAQuery webImage(java.lang.String) -> webImage
    com.androidquery.AbstractAQuery webImage(java.lang.String,boolean,boolean,int) -> webImage
    android.view.View inflate(android.view.View,int,android.view.ViewGroup) -> inflate
    com.androidquery.AbstractAQuery expand(int,boolean) -> expand
    com.androidquery.AbstractAQuery expand(boolean) -> expand
com.androidquery.auth.AccountHandle -> com.androidquery.auth.AccountHandle:
    java.util.LinkedHashSet callbacks -> a
    void auth(com.androidquery.callback.AbstractAjaxCallback) -> auth
    boolean authenticated() -> authenticated
    void success(android.content.Context) -> success
    void failure(android.content.Context,int,java.lang.String) -> failure
    void auth() -> auth
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    java.lang.String getNetworkUrl(java.lang.String) -> getNetworkUrl
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    void unauth() -> unauth
com.androidquery.auth.GoogleHandle -> com.androidquery.auth.GoogleHandle:
    android.accounts.AccountManager am -> a
    android.accounts.Account acc -> b
    java.lang.String type -> c
    android.app.Activity act -> d
    java.lang.String email -> e
    android.accounts.Account[] accs -> f
    java.lang.String token -> g
    void auth() -> auth
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    java.lang.String getType() -> getType
    void onClick(android.content.DialogInterface,int) -> onClick
    void setActiveAccount(android.content.Context,java.lang.String) -> setActiveAccount
    java.lang.String getActiveAccount(android.content.Context) -> getActiveAccount
    void auth(android.accounts.Account) -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    boolean authenticated() -> authenticated
    android.accounts.AccountManager access$0(com.androidquery.auth.GoogleHandle) -> a
    android.accounts.Account access$1(com.androidquery.auth.GoogleHandle) -> b
    java.lang.String access$2(com.androidquery.auth.GoogleHandle) -> c
    android.app.Activity access$3(com.androidquery.auth.GoogleHandle) -> d
    void access$4(com.androidquery.auth.GoogleHandle,java.lang.String) -> a
com.androidquery.auth.GoogleHandle$Task -> com.androidquery.auth.a:
    com.androidquery.auth.GoogleHandle this$0 -> a
    android.os.Bundle doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(android.os.Bundle) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.androidquery.callback.AbstractAjaxCallback -> com.androidquery.callback.AbstractAjaxCallback:
    int NET_TIMEOUT -> a
    java.lang.String AGENT -> b
    int NETWORK_POOL -> c
    boolean GZIP -> d
    java.lang.Class type -> e
    java.lang.ref.Reference whandler -> f
    java.lang.Object handler -> g
    java.lang.String callback -> h
    java.lang.ref.WeakReference progress -> i
    java.lang.String url -> j
    java.util.Map params -> k
    java.util.Map headers -> l
    java.util.Map cookies -> m
    com.androidquery.callback.Transformer transformer -> n
    java.lang.Object result -> result
    java.io.File cacheDir -> o
    com.androidquery.auth.AccountHandle ah -> p
    com.androidquery.callback.AjaxStatus status -> status
    boolean fileCache -> fileCache
    boolean memCache -> memCache
    boolean refresh -> q
    long expire -> r
    java.lang.String encoding -> s
    java.lang.ref.WeakReference act -> t
    boolean uiCallback -> u
    com.androidquery.callback.Transformer st -> v
    java.lang.Class[] DEFAULT_SIG -> w
    boolean completed -> x
    boolean blocked -> y
    boolean reauth -> z
    java.util.concurrent.ExecutorService fetchExe -> A
    org.apache.http.conn.scheme.SocketFactory ssf -> B
    org.apache.http.impl.client.DefaultHttpClient client -> C
    int lastStatus -> D
    void setTimeout(int) -> setTimeout
    void setAgent(java.lang.String) -> setAgent
    void setGZip(boolean) -> setGZip
    void setTransformer(com.androidquery.callback.Transformer) -> setTransformer
    java.lang.Class getType() -> getType
    java.lang.Object weakHandler(java.lang.Object,java.lang.String) -> weakHandler
    java.lang.Object handler(java.lang.Object,java.lang.String) -> handler
    java.lang.Object url(java.lang.String) -> url
    java.lang.Object type(java.lang.Class) -> type
    java.lang.Object transformer(com.androidquery.callback.Transformer) -> transformer
    java.lang.Object fileCache(boolean) -> fileCache
    java.lang.Object memCache(boolean) -> memCache
    java.lang.Object refresh(boolean) -> refresh
    java.lang.Object uiCallback(boolean) -> uiCallback
    java.lang.Object expire(long) -> expire
    java.lang.Object header(java.lang.String,java.lang.String) -> header
    java.lang.Object cookie(java.lang.String,java.lang.String) -> cookie
    java.lang.Object encoding(java.lang.String) -> encoding
    java.lang.Object param(java.lang.String,java.lang.Object) -> param
    java.lang.Object params(java.util.Map) -> params
    java.lang.Object progress(android.view.View) -> progress
    java.lang.Object progress(android.app.Dialog) -> progress
    java.lang.Object progress(java.lang.Object) -> progress
    void callback() -> a
    void block() -> block
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    java.lang.Object datastoreGet(java.lang.String) -> datastoreGet
    void showProgress(boolean) -> showProgress
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    java.lang.Object memGet(java.lang.String) -> memGet
    void memPut(java.lang.String,java.lang.Object) -> memPut
    void filePut(java.lang.String,java.lang.Object,java.io.File,byte[]) -> filePut
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    void async(android.app.Activity) -> async
    void async(android.content.Context) -> async
    void failure(int,java.lang.String) -> failure
    boolean cacheAvailable(android.content.Context) -> cacheAvailable
    void run() -> run
    java.lang.String getCacheUrl() -> b
    java.io.File getCacheFile() -> getCacheFile
    java.util.Map extractParams(android.net.Uri) -> a
    void network() -> c
    void afterWork() -> d
    void execute(java.lang.Runnable) -> execute
    void setNetworkLimit(int) -> setNetworkLimit
    void cancel() -> cancel
    void httpPost(java.lang.String,java.util.Map,java.util.Map,com.androidquery.callback.AjaxStatus) -> a
    void setSSF(org.apache.http.conn.scheme.SocketFactory) -> setSSF
    void httpDo(org.apache.http.client.methods.HttpUriRequest,java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> a
    java.lang.Object auth(android.app.Activity,java.lang.String,java.lang.String) -> auth
    java.lang.Object auth(com.androidquery.auth.AccountHandle) -> auth
    java.lang.String getUrl() -> getUrl
    java.lang.Object getHandler() -> getHandler
    java.lang.String getCallback() -> getCallback
    int getLastStatus() -> getLastStatus
    java.lang.Object getResult() -> getResult
    com.androidquery.callback.AjaxStatus getStatus() -> getStatus
    java.lang.String getEncoding() -> getEncoding
    boolean isMultiPart(java.util.Map) -> a
    void httpMulti(java.lang.String,java.util.Map,java.util.Map,com.androidquery.callback.AjaxStatus) -> b
    void writeData(java.io.DataOutputStream,java.lang.String,java.io.InputStream) -> a
    java.lang.String makeCookie() -> e
com.androidquery.callback.AjaxCallback -> com.androidquery.callback.AjaxCallback:
com.androidquery.callback.AjaxStatus -> com.androidquery.callback.AjaxStatus:
    int NETWORK -> NETWORK
    int DATASTORE -> DATASTORE
    int FILE -> FILE
    int MEMORY -> MEMORY
    int DEVICE -> DEVICE
    int NETWORK_ERROR -> NETWORK_ERROR
    int AUTH_ERROR -> AUTH_ERROR
    int TRANSFORM_ERROR -> TRANSFORM_ERROR
    int code -> a
    java.lang.String message -> b
    java.lang.String redirect -> c
    byte[] data -> d
    java.util.Date time -> e
    boolean refresh -> f
    org.apache.http.impl.client.DefaultHttpClient client -> g
    long duration -> h
    int source -> i
    long start -> j
    boolean done -> k
    boolean invalid -> l
    boolean reauth -> m
    java.lang.String error -> n
    org.apache.http.protocol.HttpContext context -> o
    org.apache.http.Header[] headers -> p
    com.androidquery.callback.AjaxStatus source(int) -> source
    com.androidquery.callback.AjaxStatus code(int) -> code
    com.androidquery.callback.AjaxStatus error(java.lang.String) -> error
    com.androidquery.callback.AjaxStatus message(java.lang.String) -> message
    com.androidquery.callback.AjaxStatus redirect(java.lang.String) -> redirect
    com.androidquery.callback.AjaxStatus context(org.apache.http.protocol.HttpContext) -> context
    com.androidquery.callback.AjaxStatus time(java.util.Date) -> time
    com.androidquery.callback.AjaxStatus refresh(boolean) -> refresh
    com.androidquery.callback.AjaxStatus reauth(boolean) -> reauth
    com.androidquery.callback.AjaxStatus client(org.apache.http.impl.client.DefaultHttpClient) -> client
    com.androidquery.callback.AjaxStatus headers(org.apache.http.Header[]) -> headers
    com.androidquery.callback.AjaxStatus done() -> done
    com.androidquery.callback.AjaxStatus data(byte[]) -> data
    com.androidquery.callback.AjaxStatus invalidate() -> invalidate
    boolean getDone() -> getDone
    boolean getReauth() -> getReauth
    boolean getInvalid() -> getInvalid
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String getRedirect() -> getRedirect
    byte[] getData() -> getData
    java.util.Date getTime() -> getTime
    boolean getRefresh() -> getRefresh
    org.apache.http.impl.client.DefaultHttpClient getClient() -> getClient
    long getDuration() -> getDuration
    int getSource() -> getSource
    java.lang.String getError() -> getError
    boolean expired(long) -> expired
    java.util.List getCookies() -> getCookies
    java.util.List getHeaders() -> getHeaders
com.androidquery.callback.BitmapAjaxCallback -> com.androidquery.callback.BitmapAjaxCallback:
    int SMALL_MAX -> a
    int BIG_MAX -> b
    int SMALL_PIXELS -> c
    int BIG_PIXELS -> d
    int BIG_TPIXELS -> e
    java.util.Map smallCache -> f
    java.util.Map bigCache -> g
    java.util.Map invalidCache -> h
    java.util.HashMap queueMap -> i
    java.lang.ref.WeakReference v -> j
    int targetWidth -> k
    int fallback -> l
    java.io.File imageFile -> m
    android.graphics.Bitmap bm -> n
    int animation -> o
    android.graphics.Bitmap preset -> p
    float ratio -> q
    boolean targetDim -> r
    float anchor -> s
    boolean invalid -> t
    android.graphics.BitmapFactory$Options reuse -> u
    android.graphics.Bitmap empty -> v
    android.graphics.Bitmap dummy -> w
    com.androidquery.callback.BitmapAjaxCallback imageView(android.widget.ImageView) -> imageView
    com.androidquery.callback.BitmapAjaxCallback targetWidth(int) -> targetWidth
    com.androidquery.callback.BitmapAjaxCallback file(java.io.File) -> file
    com.androidquery.callback.BitmapAjaxCallback preset(android.graphics.Bitmap) -> preset
    com.androidquery.callback.BitmapAjaxCallback bitmap(android.graphics.Bitmap) -> bitmap
    com.androidquery.callback.BitmapAjaxCallback fallback(int) -> fallback
    com.androidquery.callback.BitmapAjaxCallback animation(int) -> animation
    com.androidquery.callback.BitmapAjaxCallback ratio(float) -> ratio
    com.androidquery.callback.BitmapAjaxCallback anchor(float) -> anchor
    com.androidquery.callback.BitmapAjaxCallback reuse(android.graphics.BitmapFactory$Options) -> reuse
    android.graphics.Bitmap decode(java.lang.String,byte[],android.graphics.BitmapFactory$Options) -> a
    void setField(java.lang.Object,java.lang.String,java.lang.Object) -> a
    android.graphics.Bitmap getResizedImage(java.lang.String,byte[],int,boolean,android.graphics.BitmapFactory$Options) -> getResizedImage
    int sampleSize(int,int) -> a
    android.graphics.Bitmap bmGet(java.lang.String,byte[]) -> a
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    android.graphics.Bitmap fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    android.graphics.Bitmap transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    android.graphics.Bitmap getMemoryCached(android.content.Context,int) -> getMemoryCached
    android.graphics.Bitmap getEmptyBitmap() -> getEmptyBitmap
    void callback(java.lang.String,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void checkCb(com.androidquery.callback.BitmapAjaxCallback,java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> a
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void setIconCacheLimit(int) -> setIconCacheLimit
    void setCacheLimit(int) -> setCacheLimit
    void setPixelLimit(int) -> setPixelLimit
    void setSmallPixel(int) -> setSmallPixel
    void setMaxPixelLimit(int) -> setMaxPixelLimit
    void clearCache() -> clearCache
    void clearTasks() -> clearTasks
    java.util.Map getBCache() -> a
    java.util.Map getSCache() -> b
    java.util.Map getICache() -> c
    android.graphics.Bitmap memGet(java.lang.String) -> memGet
    android.graphics.Bitmap getMemoryCached(java.lang.String,int) -> getMemoryCached
    android.graphics.Bitmap memGet(java.lang.String,int) -> a
    java.lang.String getKey(java.lang.String,int) -> b
    void memPut(java.lang.String,int,android.graphics.Bitmap,boolean) -> a
    void memPut(java.lang.String,android.graphics.Bitmap) -> memPut
    void setBitmap$7ac029e1(android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    android.graphics.drawable.Drawable makeDrawable(android.widget.ImageView,android.graphics.Bitmap,float,float,java.io.File,android.graphics.BitmapFactory$Options) -> a
    void setBmAnimate(android.widget.ImageView,android.graphics.Bitmap,android.graphics.Bitmap,int,int,float,float,int,java.io.File,android.graphics.BitmapFactory$Options) -> a
    void async(android.app.Activity,android.content.Context,android.widget.ImageView,java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float,float,java.lang.Object,com.androidquery.auth.AccountHandle) -> async
    void async(android.content.Context) -> async
    void addQueue(java.lang.String,android.widget.ImageView) -> a
    void memPut(java.lang.String,java.lang.Object) -> memPut
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    java.lang.Object memGet(java.lang.String) -> memGet
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
com.androidquery.callback.Transformer -> com.androidquery.callback.Transformer:
    java.lang.Object transform(java.lang.String,java.lang.Class,java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
com.androidquery.service.MarketService -> com.androidquery.service.MarketService:
    android.app.Activity act -> a
    com.androidquery.AQuery aq -> b
    com.androidquery.service.MarketService$Handler handler -> c
    java.lang.String locale -> d
    java.lang.String rateUrl -> e
    java.lang.String updateUrl -> f
    boolean force -> g
    int progress -> h
    long expire -> i
    java.lang.String version -> j
    int level -> k
    int REVISION -> REVISION
    int MINOR -> MINOR
    int MAJOR -> MAJOR
    android.content.pm.ApplicationInfo ai -> l
    android.content.pm.PackageInfo pi -> m
    com.androidquery.service.MarketService rateUrl(java.lang.String) -> rateUrl
    com.androidquery.service.MarketService level(int) -> level
    com.androidquery.service.MarketService updateUrl(java.lang.String) -> updateUrl
    com.androidquery.service.MarketService locale(java.lang.String) -> locale
    com.androidquery.service.MarketService progress(int) -> progress
    com.androidquery.service.MarketService force(boolean) -> force
    com.androidquery.service.MarketService expire(long) -> expire
    android.content.pm.ApplicationInfo getApplicationInfo() -> a
    android.content.pm.PackageInfo getPackageInfo() -> b
    void checkVersion() -> checkVersion
    boolean openUrl(android.app.Activity,java.lang.String) -> b
    void callback(java.lang.String,org.json.JSONObject,com.androidquery.callback.AjaxStatus) -> callback
    boolean outdated(java.lang.String,int) -> a
    boolean requireUpdate(java.lang.String,java.lang.String,int) -> a
    void showUpdateDialog(org.json.JSONObject) -> showUpdateDialog
    android.app.Activity access$0(com.androidquery.service.MarketService) -> a
    java.lang.String access$9(com.androidquery.service.MarketService) -> b
    boolean access$10(android.app.Activity,java.lang.String) -> a
    java.lang.String access$11(com.androidquery.service.MarketService) -> c
    java.lang.String access$12(com.androidquery.service.MarketService) -> d
    void access$13(android.content.Context,java.lang.String) -> a
com.androidquery.service.MarketService$Handler -> com.androidquery.service.a:
    com.androidquery.service.MarketService this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader) -> handleTag
com.androidquery.util.AQUtility -> com.androidquery.util.AQUtility:
    boolean debug -> a
    java.lang.Object wait -> b
    java.lang.Thread$UncaughtExceptionHandler eh -> c
    java.util.Map times -> d
    android.os.Handler handler -> e
    java.util.concurrent.ScheduledExecutorService storeExe -> f
    java.io.File cacheDir -> g
    android.content.Context context -> h
    void setDebug(boolean) -> setDebug
    void debugWait(long) -> debugWait
    void debugNotify() -> debugNotify
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable) -> debug
    void report(java.lang.Throwable) -> report
    void setExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setExceptionHandler
    void time(java.lang.String) -> time
    long timeEnd(java.lang.String,long) -> timeEnd
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> a
    void transparent(android.view.View,boolean) -> transparent
    void ensureUIThread() -> ensureUIThread
    boolean isUIThread() -> isUIThread
    android.os.Handler getHandler() -> getHandler
    void post(java.lang.Runnable) -> post
    void postDelayed(java.lang.Runnable,long) -> postDelayed
    byte[] getMD5(byte[]) -> a
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    byte[] toBytes(java.io.InputStream) -> toBytes
    void write(java.io.File,byte[]) -> write
    void close(java.io.InputStream) -> close
    java.util.concurrent.ScheduledExecutorService getFileStoreExecutor() -> a
    void storeAsync(java.io.File,byte[],long) -> storeAsync
    java.io.File getCacheDir(android.content.Context) -> getCacheDir
    void setCacheDir(java.io.File) -> setCacheDir
    java.io.File getExistedCacheByUrl(android.content.Context,java.lang.String) -> getExistedCacheByUrl
    java.io.File getCacheFile(java.io.File,java.lang.String) -> getCacheFile
    java.io.File getExistedCacheByUrl(java.io.File,java.lang.String) -> getExistedCacheByUrl
    java.io.File getExistedCacheByUrlSetAccess(java.io.File,java.lang.String) -> getExistedCacheByUrlSetAccess
    void store(java.io.File,byte[]) -> store
    void cleanCacheAsync(android.content.Context) -> cleanCacheAsync
    void cleanCacheAsync(android.content.Context,long,long) -> cleanCacheAsync
    void cleanCache(java.io.File,long,long) -> cleanCache
    java.io.File getTempDir() -> getTempDir
    void cleanCache(java.io.File[],long) -> a
    int dip2pixel(android.content.Context,float) -> dip2pixel
    void setContext(android.app.Application) -> setContext
    android.content.Context getContext() -> getContext
com.androidquery.util.BitmapCache -> com.androidquery.util.BitmapCache:
    int maxCount -> a
    int maxPixels -> b
    int maxTotalPixels -> c
    int pixels -> d
    android.graphics.Bitmap put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.Object) -> remove
    void clear() -> clear
    int pixels(android.graphics.Bitmap) -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.androidquery.util.Common -> com.androidquery.util.Common:
    java.lang.Object handler -> a
    java.lang.String method -> b
    java.lang.Object[] params -> c
    boolean fallback -> d
    java.lang.Class[] sig -> e
    int methodId -> f
    int STORE_FILE -> STORE_FILE
    int CLEAN_CACHE -> CLEAN_CACHE
    int scrollState -> g
    android.widget.AbsListView$OnScrollListener osl -> h
    int lastBottom -> i
    android.widget.AdapterView$OnItemSelectedListener galleryListener -> j
    boolean galleryListen -> k
    com.androidquery.util.Common forward(java.lang.Object,java.lang.String,boolean,java.lang.Class[]) -> forward
    com.androidquery.util.Common method(int,java.lang.Object[]) -> method
    java.lang.Object invoke(java.lang.Object[]) -> a
    int compare(java.io.File,java.io.File) -> compare
    void run() -> run
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    int getScrollState() -> getScrollState
    void forward(android.widget.AbsListView$OnScrollListener) -> forward
    void checkScrolledBottom(android.widget.AbsListView,int) -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    boolean shouldDelay(int,int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void listen(android.widget.Gallery) -> listen
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void showProgress(java.lang.Object,java.lang.String,boolean) -> showProgress
    int compare(java.lang.Object,java.lang.Object) -> compare
com.androidquery.util.Constants -> com.androidquery.util.Constants:
    java.lang.String VERSION -> VERSION
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int FLAG_HARDWARE_ACCELERATED -> FLAG_HARDWARE_ACCELERATED
    int FLAG_ACTIVITY_NO_ANIMATION -> FLAG_ACTIVITY_NO_ANIMATION
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int INVISIBLE -> INVISIBLE
    int GONE -> GONE
    int FADE_IN -> FADE_IN
    int FADE_IN_NETWORK -> FADE_IN_NETWORK
    int FADE_IN_FILE -> FADE_IN_FILE
    int TAG_URL -> TAG_URL
    int TAG_SCROLL_LISTENER -> TAG_SCROLL_LISTENER
    int TAG_LAYOUT -> TAG_LAYOUT
    int TAG_NUM -> TAG_NUM
    float RATIO_PRESERVE -> RATIO_PRESERVE
    float ANCHOR_DYNAMIC -> ANCHOR_DYNAMIC
    java.lang.String ACTIVE_ACCOUNT -> ACTIVE_ACCOUNT
    java.lang.String AUTH_READER -> AUTH_READER
    java.lang.String AUTH_PICASA -> AUTH_PICASA
    java.lang.String AUTH_SPREADSHEETS -> AUTH_SPREADSHEETS
    java.lang.String AUTH_DOC_LIST -> AUTH_DOC_LIST
    java.lang.String AUTH_YOUTUBE -> AUTH_YOUTUBE
    java.lang.String AUTH_ANALYTICS -> AUTH_ANALYTICS
    java.lang.String AUTH_BLOGGER -> AUTH_BLOGGER
    java.lang.String AUTH_CALENDAR -> AUTH_CALENDAR
    java.lang.String AUTH_CONTACTS -> AUTH_CONTACTS
    java.lang.String AUTH_MAPS -> AUTH_MAPS
    java.lang.String POST_ENTITY -> POST_ENTITY
    int SDK_INT -> SDK_INT
com.androidquery.util.PredefinedBAOS -> com.androidquery.util.PredefinedBAOS:
    byte[] toByteArray() -> toByteArray
com.androidquery.util.RatioDrawable -> com.androidquery.util.RatioDrawable:
    float ratio -> a
    java.lang.ref.WeakReference ref -> b
    boolean adjusted -> c
    android.graphics.Matrix m -> d
    int w -> e
    float anchor -> f
    int version -> g
    boolean loading -> h
    java.io.File file -> i
    android.graphics.BitmapFactory$Options reuse -> j
    int getGen(android.graphics.Bitmap) -> a
    int getWidth(android.widget.ImageView) -> a
    void draw(android.graphics.Canvas) -> draw
    void run() -> run
    void draw(android.graphics.Canvas,android.widget.ImageView,android.graphics.Bitmap) -> a
    void adjust(android.widget.ImageView,android.graphics.Bitmap,boolean) -> a
    int targetHeight(int,int,int) -> a
com.androidquery.util.WebImage -> com.androidquery.util.WebImage:
    java.lang.Object progress -> a
    android.webkit.WebView wv -> b
    java.lang.String url -> c
    boolean zoom -> d
    boolean control -> e
    int color -> f
    java.lang.String template -> g
    java.lang.String getSource(android.content.Context) -> a
    void load() -> load
    void setup() -> a
    void done(android.webkit.WebView) -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
    android.webkit.WebView access$0(com.androidquery.util.WebImage) -> a
    void access$1(com.androidquery.util.WebImage) -> b
com.androidquery.util.WebImage$1 -> com.androidquery.util.a:
    com.androidquery.util.WebImage this$0 -> a
    void onNewPicture(android.webkit.WebView,android.graphics.Picture) -> onNewPicture
com.androidquery.util.XmlDom -> com.androidquery.util.XmlDom:
    org.w3c.dom.Element root -> a
    org.w3c.dom.Element getElement() -> getElement
    com.androidquery.util.XmlDom tag(java.lang.String) -> tag
    com.androidquery.util.XmlDom tag(java.lang.String,java.lang.String,java.lang.String) -> tag
    java.util.List tags(java.lang.String) -> tags
    com.androidquery.util.XmlDom child(java.lang.String) -> child
    com.androidquery.util.XmlDom child(java.lang.String,java.lang.String,java.lang.String) -> child
    java.util.List children(java.lang.String) -> children
    java.util.List children(java.lang.String,java.lang.String,java.lang.String) -> children
    java.util.List tags(java.lang.String,java.lang.String,java.lang.String) -> tags
    java.util.List convert(org.w3c.dom.NodeList,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String text(java.lang.String) -> text
    java.lang.String attr(java.lang.String) -> attr
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String serialize$117445b3(int) -> a
    void writeSpace(org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> a
    java.lang.String text() -> text
    java.lang.String text(org.w3c.dom.Node) -> a
    void serialize(org.w3c.dom.Element,org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> a
com.spacecaker.butter.BuildConfig -> com.spacecaker.butter.BuildConfig:
    boolean DEBUG -> DEBUG
com.spacecaker.butter.Constants -> com.spacecaker.butter.Constants:
    java.lang.String LASTFM_API_KEY -> LASTFM_API_KEY
    java.lang.String APOLLO -> APOLLO
    java.lang.String APOLLO_PREFERENCES -> APOLLO_PREFERENCES
    java.lang.String ARTIST_KEY -> ARTIST_KEY
    java.lang.String ALBUM_KEY -> ALBUM_KEY
    java.lang.String ALBUM_ID_KEY -> ALBUM_ID_KEY
    java.lang.String NUMALBUMS -> NUMALBUMS
    java.lang.String GENRE_KEY -> GENRE_KEY
    java.lang.String ARTIST_ID -> ARTIST_ID
    java.lang.String NUMWEEKS -> NUMWEEKS
    java.lang.String PLAYLIST_NAME_FAVORITES -> PLAYLIST_NAME_FAVORITES
    java.lang.String PLAYLIST_NAME -> PLAYLIST_NAME
    java.lang.String WIDGET_STYLE -> WIDGET_STYLE
    java.lang.String THEME_PACKAGE_NAME -> THEME_PACKAGE_NAME
    java.lang.String THEME_DESCRIPTION -> THEME_DESCRIPTION
    java.lang.String THEME_PREVIEW -> THEME_PREVIEW
    java.lang.String THEME_TITLE -> THEME_TITLE
    java.lang.String VISUALIZATION_TYPE -> VISUALIZATION_TYPE
    java.lang.String UP_STARTS_ALBUM_ACTIVITY -> UP_STARTS_ALBUM_ACTIVITY
    java.lang.String TABS_ENABLED -> TABS_ENABLED
    java.lang.String TYPE_ARTIST -> TYPE_ARTIST
    java.lang.String TYPE_ALBUM -> TYPE_ALBUM
    java.lang.String TYPE_GENRE -> TYPE_GENRE
    java.lang.String TYPE_PLAYLIST -> TYPE_PLAYLIST
    java.lang.String ALBUM_SUFFIX -> ALBUM_SUFFIX
    java.lang.String ARTIST_SUFFIX -> ARTIST_SUFFIX
    java.lang.String PLAYLIST_SUFFIX -> PLAYLIST_SUFFIX
    java.lang.String GENRE_SUFFIX -> GENRE_SUFFIX
    java.lang.String SRC_FIRST_AVAILABLE -> SRC_FIRST_AVAILABLE
    java.lang.String SRC_LASTFM -> SRC_LASTFM
    java.lang.String SRC_FILE -> SRC_FILE
    java.lang.String SRC_GALLERY -> SRC_GALLERY
    java.lang.String SIZE_NORMAL -> SIZE_NORMAL
    java.lang.String SIZE_THUMB -> SIZE_THUMB
    java.lang.String MIME_TYPE -> MIME_TYPE
    java.lang.String INTENT_ACTION -> INTENT_ACTION
    java.lang.String DATA_SCHEME -> DATA_SCHEME
    java.lang.String EXTERNAL -> EXTERNAL
    long PLAYLIST_UNKNOWN -> PLAYLIST_UNKNOWN
    long PLAYLIST_ALL_SONGS -> PLAYLIST_ALL_SONGS
    long PLAYLIST_QUEUE -> PLAYLIST_QUEUE
    long PLAYLIST_NEW -> PLAYLIST_NEW
    long PLAYLIST_FAVORITES -> PLAYLIST_FAVORITES
    long PLAYLIST_RECENTLY_ADDED -> PLAYLIST_RECENTLY_ADDED
    java.lang.String[] GENRES_DB -> GENRES_DB
    int THEME_ITEM_BACKGROUND -> THEME_ITEM_BACKGROUND
    int THEME_ITEM_FOREGROUND -> THEME_ITEM_FOREGROUND
    java.lang.String INTENT_ADD_TO_PLAYLIST -> INTENT_ADD_TO_PLAYLIST
    java.lang.String INTENT_PLAYLIST_LIST -> INTENT_PLAYLIST_LIST
    java.lang.String INTENT_CREATE_PLAYLIST -> INTENT_CREATE_PLAYLIST
    java.lang.String INTENT_RENAME_PLAYLIST -> INTENT_RENAME_PLAYLIST
    java.lang.String INTENT_KEY_RENAME -> INTENT_KEY_RENAME
    java.lang.String INTENT_KEY_DEFAULT_NAME -> INTENT_KEY_DEFAULT_NAME
com.spacecaker.butter.IApolloService -> com.spacecaker.butter.IApolloService:
    void openFile(java.lang.String) -> openFile
    void open(long[],int) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    int getQueuePosition() -> getQueuePosition
    boolean isPlaying() -> isPlaying
    void stop() -> stop
    void pause() -> pause
    void play() -> play
    void prev() -> prev
    void next() -> next
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    java.lang.String getTrackName() -> getTrackName
    java.lang.String getAlbumName() -> getAlbumName
    long getAlbumId() -> getAlbumId
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    void enqueue(long[],int) -> enqueue
    long[] getQueue() -> getQueue
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    void setShuffleMode(int) -> setShuffleMode
    void notifyChange(java.lang.String) -> notifyChange
    int getShuffleMode() -> getShuffleMode
    int removeTracks(int,int) -> removeTracks
    int removeTrack(long) -> removeTrack
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    int getAudioSessionId() -> getAudioSessionId
    void addToFavorites(long) -> addToFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    boolean isFavorite(long) -> isFavorite
    void toggleFavorite() -> toggleFavorite
com.spacecaker.butter.IApolloService$Stub -> com.spacecaker.butter.IApolloService$Stub:
    com.spacecaker.butter.IApolloService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.spacecaker.butter.IApolloService$Stub$Proxy -> com.spacecaker.butter.a:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void openFile(java.lang.String) -> openFile
    void open(long[],int) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    int getQueuePosition() -> getQueuePosition
    boolean isPlaying() -> isPlaying
    void stop() -> stop
    void pause() -> pause
    void play() -> play
    void prev() -> prev
    void next() -> next
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    java.lang.String getTrackName() -> getTrackName
    java.lang.String getAlbumName() -> getAlbumName
    long getAlbumId() -> getAlbumId
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    void enqueue(long[],int) -> enqueue
    long[] getQueue() -> getQueue
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    void setShuffleMode(int) -> setShuffleMode
    void notifyChange(java.lang.String) -> notifyChange
    int getShuffleMode() -> getShuffleMode
    int removeTracks(int,int) -> removeTracks
    int removeTrack(long) -> removeTrack
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    int getAudioSessionId() -> getAudioSessionId
    void addToFavorites(long) -> addToFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    boolean isFavorite(long) -> isFavorite
    void toggleFavorite() -> toggleFavorite
com.spacecaker.butter.NowPlayingCursor -> com.spacecaker.butter.NowPlayingCursor:
    java.lang.String[] mProjection -> a
    android.database.Cursor mCurrentPlaylistCursor -> b
    int mSize -> c
    long[] mNowPlaying -> d
    long[] mCursorIdxs -> e
    android.content.Context context -> f
    com.spacecaker.butter.IApolloService mService -> g
    void makeNowPlayingCursor() -> a
    int getCount() -> getCount
    boolean onMove(int,int) -> onMove
    java.lang.String getString(int) -> getString
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    int getType(int) -> getType
    boolean isNull(int) -> isNull
    java.lang.String[] getColumnNames() -> getColumnNames
    void deactivate() -> deactivate
    boolean requery() -> requery
com.spacecaker.butter.R -> com.spacecaker.butter.R:
com.spacecaker.butter.R$anim -> com.spacecaker.butter.R$anim:
    int peak_meter_1 -> peak_meter_1
    int peak_meter_2 -> peak_meter_2
com.spacecaker.butter.R$array -> com.spacecaker.butter.R$array:
    int tab_titles -> tab_titles
    int visualization_types -> visualization_types
    int widget_style_types -> widget_style_types
com.spacecaker.butter.R$attr -> com.spacecaker.butter.R$attr:
com.spacecaker.butter.R$color -> com.spacecaker.butter.R$color:
    int black -> black
    int holo_blue_dark -> holo_blue_dark
    int queue_callout_line -> queue_callout_line
    int selected_tabtext -> selected_tabtext
    int tab_selected_holo -> tab_selected_holo
    int tab_selected_pressed_holo -> tab_selected_pressed_holo
    int tab_text_color -> tab_text_color
    int tab_unselected_focused_holo -> tab_unselected_focused_holo
    int tab_unselected_holo -> tab_unselected_holo
    int tab_unselected_pressed_holo -> tab_unselected_pressed_holo
    int transparent -> transparent
    int transparent_black -> transparent_black
    int unselected_tabtext -> unselected_tabtext
    int white -> white
com.spacecaker.butter.R$dimen -> com.spacecaker.butter.R$dimen:
    int audio_player_artwork_padding -> audio_player_artwork_padding
    int audio_player_button_container_padding -> audio_player_button_container_padding
    int audio_player_controls_height -> audio_player_controls_height
    int audio_player_info_container_padding -> audio_player_info_container_padding
    int audio_player_seek_bar_padding -> audio_player_seek_bar_padding
    int bottom_action_bar_album_art_width_height -> bottom_action_bar_album_art_width_height
    int bottom_action_bar_divider_height -> bottom_action_bar_divider_height
    int bottom_action_bar_height -> bottom_action_bar_height
    int bottom_action_bar_info_padding_left -> bottom_action_bar_info_padding_left
    int bottom_action_bar_item_padding_left_right -> bottom_action_bar_item_padding_left_right
    int bottom_action_bar_item_width -> bottom_action_bar_item_width
    int bottom_action_bar_padding_left -> bottom_action_bar_padding_left
    int colorstrip_height -> colorstrip_height
    int fast_scroll_padding_right -> fast_scroll_padding_right
    int four_by_one_album_art_width -> four_by_one_album_art_width
    int four_by_two_album_art_width -> four_by_two_album_art_width
    int four_by_two_control_height -> four_by_two_control_height
    int four_by_two_height -> four_by_two_height
    int gridview_image_height -> gridview_image_height
    int gridview_image_width -> gridview_image_width
    int gridview_item_ccontainer_height -> gridview_item_ccontainer_height
    int gridview_item_ccontainer_padding_left -> gridview_item_ccontainer_padding_left
    int gridview_item_ccontainer_padding_right -> gridview_item_ccontainer_padding_right
    int gridview_item_margin -> gridview_item_margin
    int half_and_half_container_padding -> half_and_half_container_padding
    int half_and_half_image_height -> half_and_half_image_height
    int half_and_half_text_padding -> half_and_half_text_padding
    int header_text_padding -> header_text_padding
    int header_text_padding_left -> header_text_padding_left
    int list_separator_container_padding_left -> list_separator_container_padding_left
    int list_separator_min_height -> list_separator_min_height
    int list_separator_padding_left_right -> list_separator_padding_left_right
    int listview_album_art -> listview_album_art
    int listview_album_margin -> listview_album_margin
    int listview_item_height -> listview_item_height
    int listview_items_padding_left_top -> listview_items_padding_left_top
    int listview_items_padding_right -> listview_items_padding_right
    int listview_items_padding_small_top -> listview_items_padding_small_top
    int listview_peak_meter_one_padding_right -> listview_peak_meter_one_padding_right
    int listview_peak_meter_two_padding_right -> listview_peak_meter_two_padding_right
    int notification_expanded_height -> notification_expanded_height
    int notification_padding -> notification_padding
    int one_by_one_height -> one_by_one_height
    int one_by_one_width -> one_by_one_width
    int peak_meter_one_padding_right -> peak_meter_one_padding_right
    int peak_meter_padding_bottom -> peak_meter_padding_bottom
    int peak_meter_padding_top -> peak_meter_padding_top
    int peak_meter_two_padding_right -> peak_meter_two_padding_right
    int play_controls_notification -> play_controls_notification
    int quick_context_line_height -> quick_context_line_height
    int quick_context_line_width -> quick_context_line_width
    int quick_context_margin_right -> quick_context_margin_right
    int quick_context_padding_right -> quick_context_padding_right
    int status_bar_album_art -> status_bar_album_art
    int status_bar_button_info_container_padding_left -> status_bar_button_info_container_padding_left
    int status_bar_button_width_height -> status_bar_button_width_height
    int status_bar_recents_app_description_text_size -> status_bar_recents_app_description_text_size
    int status_bar_recents_app_icon_left_margin -> status_bar_recents_app_icon_left_margin
    int status_bar_recents_app_icon_max_height -> status_bar_recents_app_icon_max_height
    int status_bar_recents_app_icon_max_width -> status_bar_recents_app_icon_max_width
    int status_bar_recents_app_icon_top_margin -> status_bar_recents_app_icon_top_margin
    int status_bar_recents_app_label_left_margin -> status_bar_recents_app_label_left_margin
    int status_bar_recents_app_label_text_size -> status_bar_recents_app_label_text_size
    int status_bar_recents_app_label_width -> status_bar_recents_app_label_width
    int status_bar_recents_fading_edge_length -> status_bar_recents_fading_edge_length
    int status_bar_recents_item_padding -> status_bar_recents_item_padding
    int status_bar_recents_thumbnail_height -> status_bar_recents_thumbnail_height
    int status_bar_recents_thumbnail_left_margin -> status_bar_recents_thumbnail_left_margin
    int status_bar_recents_thumbnail_width -> status_bar_recents_thumbnail_width
    int tab_height -> tab_height
    int tab_padding_left_right -> tab_padding_left_right
    int tab_padding_top_bottom -> tab_padding_top_bottom
    int text_size_extra_micro -> text_size_extra_micro
    int text_size_large -> text_size_large
    int text_size_medium -> text_size_medium
    int text_size_micro -> text_size_micro
    int text_size_small -> text_size_small
    int viewpager_margin_stroke_width -> viewpager_margin_stroke_width
com.spacecaker.butter.R$drawable -> com.spacecaker.butter.R$drawable:
    int apollo_settings_themes -> apollo_settings_themes
    int appwidget_bg -> appwidget_bg
    int appwidget_bg_holo -> appwidget_bg_holo
    int bar_graph -> bar_graph
    int butter_holo_dark_next -> butter_holo_dark_next
    int butter_holo_dark_notifiation_bar_collapse -> butter_holo_dark_notifiation_bar_collapse
    int butter_holo_dark_overflow -> butter_holo_dark_overflow
    int butter_holo_dark_pause -> butter_holo_dark_pause
    int butter_holo_dark_play -> butter_holo_dark_play
    int butter_holo_light_favorite_normal -> butter_holo_light_favorite_normal
    int butter_holo_light_favorite_selected -> butter_holo_light_favorite_selected
    int butter_holo_light_next -> butter_holo_light_next
    int butter_holo_light_overflow -> butter_holo_light_overflow
    int butter_holo_light_pause -> butter_holo_light_pause
    int butter_holo_light_play -> butter_holo_light_play
    int butter_holo_light_previous -> butter_holo_light_previous
    int butter_holo_light_repeat_all -> butter_holo_light_repeat_all
    int butter_holo_light_repeat_normal -> butter_holo_light_repeat_normal
    int butter_holo_light_repeat_one -> butter_holo_light_repeat_one
    int butter_holo_light_search -> butter_holo_light_search
    int butter_holo_light_shuffle_normal -> butter_holo_light_shuffle_normal
    int butter_holo_light_shuffle_on -> butter_holo_light_shuffle_on
    int butter_settings_themes -> butter_settings_themes
    int colorstrip_shadow -> colorstrip_shadow
    int dropdown_ic_arrow_normal_holo_light -> dropdown_ic_arrow_normal_holo_light
    int holo_selector -> holo_selector
    int holo_selector_bg -> holo_selector_bg
    int ic_launcher -> ic_launcher
    int indicator_playing_peak_meter_1 -> indicator_playing_peak_meter_1
    int indicator_playing_peak_meter_2 -> indicator_playing_peak_meter_2
    int indicator_playing_peak_meter_3 -> indicator_playing_peak_meter_3
    int indicator_playing_peak_meter_4 -> indicator_playing_peak_meter_4
    int indicator_playing_peak_meter_5 -> indicator_playing_peak_meter_5
    int list_section_divider_holo_custom -> list_section_divider_holo_custom
    int no_art_normal -> no_art_normal
    int no_art_small -> no_art_small
    int notify_panel_notification_icon_bg -> notify_panel_notification_icon_bg
    int promo -> promo
    int queue_thumbnail_bg -> queue_thumbnail_bg
    int queue_thumbnail_fg -> queue_thumbnail_fg
    int recents_thumbnail_bg_press -> recents_thumbnail_bg_press
    int scrubber_control_disabled_holo -> scrubber_control_disabled_holo
    int scrubber_control_focused_holo -> scrubber_control_focused_holo
    int scrubber_control_normal_holo -> scrubber_control_normal_holo
    int scrubber_control_pressed_holo -> scrubber_control_pressed_holo
    int scrubber_control_selector_holo -> scrubber_control_selector_holo
    int space_fav -> space_fav
    int space_forw -> space_forw
    int space_overflow -> space_overflow
    int space_pause -> space_pause
    int space_play -> space_play
    int space_previous -> space_previous
    int space_repeat_normal -> space_repeat_normal
    int space_search -> space_search
    int space_shuffle_normal -> space_shuffle_normal
    int stat_notify_music -> stat_notify_music
    int status_bg -> status_bg
    int tab -> tab
    int title_bar_shadow -> title_bar_shadow
    int viewpager_margin -> viewpager_margin
com.spacecaker.butter.R$id -> com.spacecaker.butter.R$id:
    int action_bar_album_art -> action_bar_album_art
    int action_bar_album_name -> action_bar_album_name
    int action_bar_layout -> action_bar_layout
    int action_bar_track_name -> action_bar_track_name
    int action_eqalizer -> action_eqalizer
    int action_overflow -> action_overflow
    int action_search -> action_search
    int action_settings -> action_settings
    int action_shuffle_all -> action_shuffle_all
    int add_to_playlist -> add_to_playlist
    int app_description -> app_description
    int app_thumbnail -> app_thumbnail
    int artist_half_container -> artist_half_container
    int audio_player_album_art -> audio_player_album_art
    int audio_player_album_artist -> audio_player_album_artist
    int audio_player_current_time -> audio_player_current_time
    int audio_player_next -> audio_player_next
    int audio_player_play -> audio_player_play
    int audio_player_prev -> audio_player_prev
    int audio_player_repeat -> audio_player_repeat
    int audio_player_shuffle -> audio_player_shuffle
    int audio_player_text_border -> audio_player_text_border
    int audio_player_total_time -> audio_player_total_time
    int audio_player_track -> audio_player_track
    int audio_player_track_text -> audio_player_track_text
    int bottom_action_bar -> bottom_action_bar
    int bottom_action_bar_album_art -> bottom_action_bar_album_art
    int bottom_action_bar_artist_name -> bottom_action_bar_artist_name
    int bottom_action_bar_container -> bottom_action_bar_container
    int bottom_action_bar_info_divider -> bottom_action_bar_info_divider
    int bottom_action_bar_next -> bottom_action_bar_next
    int bottom_action_bar_play -> bottom_action_bar_play
    int bottom_action_bar_previous -> bottom_action_bar_previous
    int bottom_action_bar_track_name -> bottom_action_bar_track_name
    int bottom_colorstrip -> bottom_colorstrip
    int bottomactionbar_new -> bottomactionbar_new
    int buttons -> buttons
    int colorstrip -> colorstrip
    int colorstrip_bottom -> colorstrip_bottom
    int empty_view -> empty_view
    int eq -> eq
    int four_by_one_album_appwidget -> four_by_one_album_appwidget
    int four_by_one_albumart -> four_by_one_albumart
    int four_by_one_artist -> four_by_one_artist
    int four_by_one_control_next -> four_by_one_control_next
    int four_by_one_control_play -> four_by_one_control_play
    int four_by_one_control_prev -> four_by_one_control_prev
    int four_by_one_title -> four_by_one_title
    int four_by_two -> four_by_two
    int four_by_two_albumart -> four_by_two_albumart
    int four_by_two_albumname -> four_by_two_albumname
    int four_by_two_artistname -> four_by_two_artistname
    int four_by_two_control_next -> four_by_two_control_next
    int four_by_two_control_play -> four_by_two_control_play
    int four_by_two_control_prev -> four_by_two_control_prev
    int four_by_two_control_repeat -> four_by_two_control_repeat
    int four_by_two_control_shuffle -> four_by_two_control_shuffle
    int four_by_two_controls -> four_by_two_controls
    int four_by_two_controls_info_divider -> four_by_two_controls_info_divider
    int four_by_two_info -> four_by_two_info
    int four_by_two_trackname -> four_by_two_trackname
    int gridview -> gridview
    int gridview_image -> gridview_image
    int gridview_info_holder -> gridview_info_holder
    int gridview_line_one -> gridview_line_one
    int gridview_line_two -> gridview_line_two
    int gridview_outershell -> gridview_outershell
    int gridview_text_border -> gridview_text_border
    int half -> half
    int half_artist_image -> half_artist_image
    int half_artist_image_text -> half_artist_image_text
    int half_artist_image_text_line_two -> half_artist_image_text_line_two
    int half_artist_info_holder -> half_artist_info_holder
    int header_image -> header_image
    int header_text -> header_text
    int image_edit_file -> image_edit_file
    int image_edit_gallery -> image_edit_gallery
    int image_edit_lastfm -> image_edit_lastfm
    int image_edit_web -> image_edit_web
    int listview_item_image -> listview_item_image
    int listview_item_line_one -> listview_item_line_one
    int listview_item_line_two -> listview_item_line_two
    int notificationbg -> notificationbg
    int one_by_one_albumart -> one_by_one_albumart
    int peak_one -> peak_one
    int peak_two -> peak_two
    int play_store -> play_store
    int queue_album_art -> queue_album_art
    int queue_artist_image -> queue_artist_image
    int queue_track_name -> queue_track_name
    int quick_context_line -> quick_context_line
    int quick_context_tip -> quick_context_tip
    int quick_queue_holder -> quick_queue_holder
    int recent_item -> recent_item
    int recents_callout_line -> recents_callout_line
    int scrollingTabs -> scrollingTabs
    int settings -> settings
    int shadow -> shadow
    int share -> share
    int status_bar_album_art -> status_bar_album_art
    int status_bar_album_name -> status_bar_album_name
    int status_bar_artist_name -> status_bar_artist_name
    int status_bar_collapse -> status_bar_collapse
    int status_bar_icon -> status_bar_icon
    int status_bar_next -> status_bar_next
    int status_bar_play -> status_bar_play
    int status_bar_prev -> status_bar_prev
    int status_bar_track_name -> status_bar_track_name
    int tabs -> tabs
    int textarea -> textarea
    int themeApply -> themeApply
    int themeDescription -> themeDescription
    int themeIcon -> themeIcon
    int themeSearch -> themeSearch
    int themeTitle -> themeTitle
    int title -> title
    int track_list_context_frame -> track_list_context_frame
    int viewPager -> viewPager
    int visualizerView -> visualizerView
com.spacecaker.butter.R$integer -> com.spacecaker.butter.R$integer:
    int gridview_columns -> gridview_columns
    int image_fade_in_duration -> image_fade_in_duration
    int listview_album_art -> listview_album_art
    int listview_padding_left -> listview_padding_left
    int listview_padding_right -> listview_padding_right
    int peak -> peak
    int viewpager_margin_width -> viewpager_margin_width
com.spacecaker.butter.R$layout -> com.spacecaker.butter.R$layout:
    int audio_controls -> audio_controls
    int audio_player -> audio_player
    int audio_player_browser -> audio_player_browser
    int bottom_action_bar -> bottom_action_bar
    int colorstrip -> colorstrip
    int context_menu -> context_menu
    int context_menu_header -> context_menu_header
    int custom_action_bar -> custom_action_bar
    int empty_view -> empty_view
    int fourbyone_app_widget -> fourbyone_app_widget
    int fourbyone_app_widget_dark -> fourbyone_app_widget_dark
    int fourbytwo_app_sleek_widget -> fourbytwo_app_sleek_widget
    int fourbytwo_app_sleek_widget_dark -> fourbytwo_app_sleek_widget_dark
    int fourbytwo_app_widget -> fourbytwo_app_widget
    int fourbytwo_app_widget_dark -> fourbytwo_app_widget_dark
    int gridview -> gridview
    int gridview_items -> gridview_items
    int half_and_half -> half_and_half
    int library_browser -> library_browser
    int list_separator -> list_separator
    int listview -> listview
    int listview_items -> listview_items
    int onebyone_app_widget -> onebyone_app_widget
    int quick_queue -> quick_queue
    int quick_queue_items -> quick_queue_items
    int shadow -> shadow
    int status_bar -> status_bar
    int status_bar_expanded -> status_bar_expanded
    int tabs -> tabs
    int theme_preview -> theme_preview
    int track_browser -> track_browser
com.spacecaker.butter.R$menu -> com.spacecaker.butter.R$menu:
    int actionbar_top -> actionbar_top
    int context_albumimage -> context_albumimage
    int context_artistimage -> context_artistimage
    int context_playlist_genreimage -> context_playlist_genreimage
    int overflow_now_playing -> overflow_now_playing
com.spacecaker.butter.R$plurals -> com.spacecaker.butter.R$plurals:
    int NNNtrackstoplaylist -> NNNtrackstoplaylist
    int Nalbums -> Nalbums
    int Nsongs -> Nsongs
com.spacecaker.butter.R$string -> com.spacecaker.butter.R$string:
    int about -> about
    int about_butter -> about_butter
    int add_to_playlist -> add_to_playlist
    int album_header -> album_header
    int album_page_title -> album_page_title
    int apollo_1x1 -> apollo_1x1
    int apollo_4x1 -> apollo_4x1
    int apollo_4x2 -> apollo_4x2
    int apollo_themes -> apollo_themes
    int app_name -> app_name
    int apply_theme -> apply_theme
    int artist_page_title -> artist_page_title
    int butter_1x1 -> butter_1x1
    int butter_4x1 -> butter_4x1
    int butter_4x2 -> butter_4x2
    int butter_4x22 -> butter_4x22
    int butter_name -> butter_name
    int by -> by
    int cd_bottom_action_bar_album_art -> cd_bottom_action_bar_album_art
    int cd_favorite -> cd_favorite
    int cd_next -> cd_next
    int cd_overflow -> cd_overflow
    int cd_play -> cd_play
    int cd_previous -> cd_previous
    int cd_repeat -> cd_repeat
    int cd_search -> cd_search
    int cd_shuffle -> cd_shuffle
    int delete_playlist -> delete_playlist
    int delete_warning -> delete_warning
    int durationformatlong -> durationformatlong
    int durationformatshort -> durationformatshort
    int eqalizer -> eqalizer
    int error -> error
    int favorite -> favorite
    int get_more_themes -> get_more_themes
    int header_interface -> header_interface
    int image_edit_albums -> image_edit_albums
    int image_edit_artists -> image_edit_artists
    int image_edit_file -> image_edit_file
    int image_edit_gallery -> image_edit_gallery
    int image_edit_genre -> image_edit_genre
    int image_edit_lastfm -> image_edit_lastfm
    int image_edit_playlist -> image_edit_playlist
    int image_edit_web -> image_edit_web
    int key_build_version -> key_build_version
    int key_dev -> key_dev
    int key_tabs_enabled -> key_tabs_enabled
    int key_themes -> key_themes
    int key_themes_package -> key_themes_package
    int key_themes_preferences -> key_themes_preferences
    int key_visualization_type -> key_visualization_type
    int key_widget_style -> key_widget_style
    int new_playlist -> new_playlist
    int new_playlist_name_template -> new_playlist_name_template
    int now_listening_to -> now_listening_to
    int nowplaying -> nowplaying
    int overwrite -> overwrite
    int play_all -> play_all
    int play_external_error -> play_external_error
    int play_external_question_button_cancel -> play_external_question_button_cancel
    int play_external_question_button_play -> play_external_question_button_play
    int play_external_question_button_queue -> play_external_question_button_queue
    int play_external_question_msg -> play_external_question_msg
    int play_store -> play_store
    int queue -> queue
    int remove -> remove
    int rename_playlist -> rename_playlist
    int repeat_all -> repeat_all
    int repeat_off -> repeat_off
    int repeat_one -> repeat_one
    int save -> save
    int search -> search
    int select_theme -> select_theme
    int set_as_ringtone -> set_as_ringtone
    int settings -> settings
    int settings_delete_cache_summary -> settings_delete_cache_summary
    int settings_delete_cache_title -> settings_delete_cache_title
    int settings_storage_category -> settings_storage_category
    int share -> share
    int share_track_using -> share_track_using
    int shuffle_all -> shuffle_all
    int shuffle_off -> shuffle_off
    int shuffle_on -> shuffle_on
    int tab_albums -> tab_albums
    int tab_artists -> tab_artists
    int tab_genres -> tab_genres
    int tab_playlists -> tab_playlists
    int tab_recent -> tab_recent
    int tab_songs -> tab_songs
    int tab_visibility_summary -> tab_visibility_summary
    int tab_visibility_title -> tab_visibility_title
    int themes -> themes
    int track_header -> track_header
    int unknown -> unknown
    int use_as_ringtone -> use_as_ringtone
    int version -> version
    int visual_bargraph -> visual_bargraph
    int visual_none -> visual_none
    int visual_solidbargraph -> visual_solidbargraph
    int visual_waveform -> visual_waveform
    int visualizer_summary -> visualizer_summary
    int visualizer_title -> visualizer_title
    int widget_style_dark -> widget_style_dark
    int widget_style_light -> widget_style_light
    int widget_style_summary -> widget_style_summary
    int widget_style_title -> widget_style_title
com.spacecaker.butter.R$style -> com.spacecaker.butter.R$style:
    int Apollo_Holo -> Apollo_Holo
    int Apollo_Holo_Light -> Apollo_Holo_Light
    int AudioPlayerButton -> AudioPlayerButton
    int AudioPlayerText -> AudioPlayerText
    int BottomActionBarItem -> BottomActionBarItem
    int BottomActionBarText -> BottomActionBarText
    int FourByTwoMediaButton -> FourByTwoMediaButton
    int GridViewTextItem -> GridViewTextItem
    int GridviewShadowedText -> GridviewShadowedText
    int HalfText -> HalfText
    int HeaderText -> HeaderText
    int OverFlowHolo -> OverFlowHolo
    int OverFlowHolo_Light -> OverFlowHolo_Light
    int PeakMeter -> PeakMeter
    int SeparatorTextViewStyle -> SeparatorTextViewStyle
    int ShadowedText -> ShadowedText
    int StatusBarButton -> StatusBarButton
    int StatusBarText -> StatusBarText
    int Tabs -> Tabs
    int Theme_Light_Translucent -> Theme_Light_Translucent
    int Theme_Light_Translucent_Dialog -> Theme_Light_Translucent_Dialog
    int Theme_QuickQueue -> Theme_QuickQueue
    int Topborderline -> Topborderline
com.spacecaker.butter.R$xml -> com.spacecaker.butter.R$xml:
    int appwidget1x1_info -> appwidget1x1_info
    int appwidget4x1_info -> appwidget4x1_info
    int appwidget4x22_info -> appwidget4x22_info
    int appwidget4x2_info -> appwidget4x2_info
    int searchable -> searchable
    int settings -> settings
com.spacecaker.butter.activities.AudioPlayerHolder -> com.spacecaker.butter.activities.AudioPlayerHolder:
    com.spacecaker.butter.service.ServiceToken mToken -> a
    com.spacecaker.butter.ui.adapters.PagerAdapter mPagerAdapter -> b
    android.content.BroadcastReceiver mMediaStatusReceiver -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void initPager() -> initPager
com.spacecaker.butter.activities.AudioPlayerHolder$1 -> com.spacecaker.butter.activities.a:
    com.spacecaker.butter.activities.AudioPlayerHolder this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.activities.MusicLibrary -> com.spacecaker.butter.activities.MusicLibrary:
    com.spacecaker.butter.service.ServiceToken mToken -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    void initPager() -> initPager
    void initScrollableTabs(android.support.v4.view.ViewPager) -> initScrollableTabs
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void shuffleAll() -> shuffleAll
com.spacecaker.butter.activities.PlayExternal -> com.spacecaker.butter.activities.PlayExternal:
    com.spacecaker.butter.service.ServiceToken mToken -> a
    android.net.Uri mUri -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    void onCancel(android.content.DialogInterface) -> onCancel
    void access$0$6bb2fd67(com.spacecaker.butter.activities.PlayExternal,long,boolean) -> a
com.spacecaker.butter.activities.PlayExternal$1 -> com.spacecaker.butter.activities.b:
    com.spacecaker.butter.activities.PlayExternal this$0 -> a
    java.lang.String val$file -> b
    long val$id -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.spacecaker.butter.activities.QueryBrowserActivity -> com.spacecaker.butter.activities.QueryBrowserActivity:
    com.spacecaker.butter.activities.QueryBrowserActivity$QueryListAdapter mAdapter -> a
    boolean mAdapterSent -> b
    java.lang.String mFilterString -> c
    com.spacecaker.butter.service.ServiceToken mToken -> d
    android.widget.ListView mTrackList -> e
    android.database.Cursor mQueryCursor -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onDestroy() -> onDestroy
    void init(android.database.Cursor) -> init
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    android.database.Cursor getQueryCursor(android.content.AsyncQueryHandler,java.lang.String) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.database.Cursor access$0(com.spacecaker.butter.activities.QueryBrowserActivity) -> a
    void access$1(com.spacecaker.butter.activities.QueryBrowserActivity,android.database.Cursor) -> a
    android.database.Cursor access$2$32f4ffcd(com.spacecaker.butter.activities.QueryBrowserActivity,java.lang.String) -> a
com.spacecaker.butter.activities.QueryBrowserActivity$QueryListAdapter -> com.spacecaker.butter.activities.c:
    com.spacecaker.butter.activities.QueryBrowserActivity mActivity -> a
    android.content.AsyncQueryHandler mQueryHandler -> b
    java.lang.String mConstraint -> c
    boolean mConstraintIsValid -> d
    void setActivity(com.spacecaker.butter.activities.QueryBrowserActivity) -> setActivity
    android.content.AsyncQueryHandler getQueryHandler() -> getQueryHandler
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    com.spacecaker.butter.activities.QueryBrowserActivity access$0(com.spacecaker.butter.activities.QueryBrowserActivity$QueryListAdapter) -> a
com.spacecaker.butter.activities.QueryBrowserActivity$QueryListAdapter$QueryHandler -> com.spacecaker.butter.activities.d:
    com.spacecaker.butter.activities.QueryBrowserActivity$QueryListAdapter this$1 -> a
    void onQueryComplete(int,java.lang.Object,android.database.Cursor) -> onQueryComplete
com.spacecaker.butter.activities.QuickQueue -> com.spacecaker.butter.activities.QuickQueue:
    void onCreate(android.os.Bundle) -> onCreate
com.spacecaker.butter.activities.TracksBrowser -> com.spacecaker.butter.activities.TracksBrowser:
    android.os.Bundle bundle -> a
    android.content.Intent intent -> b
    java.lang.String mimeType -> c
    com.spacecaker.butter.service.ServiceToken mToken -> d
    int RESULT_LOAD_IMAGE -> e
    com.spacecaker.butter.cache.ImageProvider mImageProvider -> f
    android.content.BroadcastReceiver mMediaStatusReceiver -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onSearchWeb() -> onSearchWeb
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void whatBundle(android.os.Bundle) -> whatBundle
    java.lang.String getArtist() -> getArtist
    java.lang.String getAlbum() -> getAlbum
    java.lang.String getAlbumId() -> getAlbumId
    java.lang.String getNumAlbums() -> getNumAlbums
    java.lang.String getGenre() -> getGenre
    java.lang.String getPlaylist() -> getPlaylist
com.spacecaker.butter.activities.TracksBrowser$1 -> com.spacecaker.butter.activities.e:
    com.spacecaker.butter.activities.TracksBrowser this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.app.widgets.AppWidget11 -> com.spacecaker.butter.app.widgets.AppWidget11:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.spacecaker.butter.app.widgets.AppWidget11 sInstance -> a
    com.spacecaker.butter.app.widgets.AppWidget11 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    void notifyChange(com.spacecaker.butter.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.spacecaker.butter.service.ApolloService,int[]) -> performUpdate
    void linkButtons$1d42ccef(android.content.Context,android.widget.RemoteViews) -> a
com.spacecaker.butter.app.widgets.AppWidget41 -> com.spacecaker.butter.app.widgets.AppWidget41:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.spacecaker.butter.app.widgets.AppWidget41 sInstance -> a
    com.spacecaker.butter.app.widgets.AppWidget41 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    void notifyChange(com.spacecaker.butter.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.spacecaker.butter.service.ApolloService,int[]) -> performUpdate
    void linkButtons(android.content.Context,android.widget.RemoteViews,boolean) -> a
com.spacecaker.butter.app.widgets.AppWidget42 -> com.spacecaker.butter.app.widgets.AppWidget42:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.spacecaker.butter.app.widgets.AppWidget42 sInstance -> a
    com.spacecaker.butter.app.widgets.AppWidget42 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    void notifyChange(com.spacecaker.butter.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.spacecaker.butter.service.ApolloService,int[]) -> performUpdate
    void linkButtons(android.content.Context,android.widget.RemoteViews,boolean) -> a
com.spacecaker.butter.app.widgets.AppWidget422 -> com.spacecaker.butter.app.widgets.AppWidget422:
    java.lang.String CMDAPPWIDGETUPDATE -> CMDAPPWIDGETUPDATE
    com.spacecaker.butter.app.widgets.AppWidget422 sInstance -> a
    com.spacecaker.butter.app.widgets.AppWidget422 getInstance() -> getInstance
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    void notifyChange(com.spacecaker.butter.service.ApolloService,java.lang.String) -> notifyChange
    void performUpdate(com.spacecaker.butter.service.ApolloService,int[]) -> performUpdate
    void linkButtons(android.content.Context,android.widget.RemoteViews,boolean) -> a
com.spacecaker.butter.cache.ImageCache -> com.spacecaker.butter.cache.ImageCache:
    java.lang.String TAG -> a
    android.util.LruCache mLruCache -> b
    com.spacecaker.butter.cache.ImageCache sInstance -> c
    com.spacecaker.butter.cache.ImageCache getInstance(android.content.Context) -> getInstance
    void init(android.content.Context) -> init
    com.spacecaker.butter.cache.ImageCache findOrCreateCache(android.app.Activity) -> findOrCreateCache
    void add(java.lang.String,android.graphics.Bitmap) -> add
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clearMemCache() -> clearMemCache
com.spacecaker.butter.cache.ImageCache$1 -> com.spacecaker.butter.cache.a:
    com.spacecaker.butter.cache.ImageCache this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.spacecaker.butter.cache.ImageCache$RetainFragment -> com.spacecaker.butter.cache.ImageCache$RetainFragment:
    java.lang.Object mObject -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
com.spacecaker.butter.cache.ImageInfo -> com.spacecaker.butter.cache.ImageInfo:
    java.lang.String type -> type
    java.lang.String source -> source
    java.lang.String size -> size
    java.lang.String[] data -> data
com.spacecaker.butter.cache.ImageProvider -> com.spacecaker.butter.cache.ImageProvider:
    com.spacecaker.butter.cache.ImageCache memCache -> a
    java.util.Map pendingImagesMap -> b
    java.util.Set unavailable -> c
    android.content.Context mContext -> d
    int thumbSize -> e
    com.spacecaker.butter.cache.ImageProvider mInstance -> f
    com.spacecaker.butter.cache.ImageProvider getInstance(android.app.Activity) -> getInstance
    void setImageCache(com.spacecaker.butter.cache.ImageCache) -> setImageCache
    void loadImage(android.widget.ImageView,com.spacecaker.butter.cache.ImageInfo) -> loadImage
    void asyncLoad(java.lang.String,android.widget.ImageView,android.os.AsyncTask) -> a
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> bitmapReady
    void clearFromMemoryCache(java.lang.String) -> clearFromMemoryCache
    void clearAllCaches() -> clearAllCaches
com.spacecaker.butter.helpers.AddIdCursorLoader -> com.spacecaker.butter.helpers.AddIdCursorLoader:
    android.content.Loader$ForceLoadContentObserver mObserver -> a
    android.net.Uri mUri -> b
    java.lang.String[] mProjection -> c
    java.lang.String mSelection -> d
    java.lang.String[] mSelectionArgs -> e
    java.lang.String mSortOrder -> f
    android.database.Cursor mCursor -> g
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
    java.lang.Object loadInBackground() -> loadInBackground
com.spacecaker.butter.helpers.DomElement -> com.spacecaker.butter.helpers.DomElement:
    org.w3c.dom.Element e -> a
    org.w3c.dom.Element getElement() -> getElement
    boolean hasAttribute(java.lang.String) -> hasAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getText() -> getText
    boolean hasChild(java.lang.String) -> hasChild
    com.spacecaker.butter.helpers.DomElement getChild(java.lang.String) -> getChild
    java.lang.String getChildText(java.lang.String) -> getChildText
    java.util.List getChildren() -> getChildren
    java.util.List getChildren(java.lang.String) -> getChildren
    java.lang.String getTagName() -> getTagName
com.spacecaker.butter.helpers.GetBitmapTask -> com.spacecaker.butter.helpers.GetBitmapTask:
    java.lang.ref.WeakReference mListenerReference -> a
    java.lang.ref.WeakReference mContextReference -> b
    com.spacecaker.butter.cache.ImageInfo mImageInfo -> c
    int mThumbSize -> d
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.spacecaker.butter.helpers.GetBitmapTask$OnBitmapReadyListener -> com.spacecaker.butter.helpers.GetBitmapTask$OnBitmapReadyListener:
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> bitmapReady
com.spacecaker.butter.helpers.RefreshableFragment -> com.spacecaker.butter.helpers.RefreshableFragment:
    void refresh() -> refresh
com.spacecaker.butter.helpers.lastfm.Album -> com.spacecaker.butter.helpers.lastfm.Album:
    com.spacecaker.butter.helpers.lastfm.ItemFactory FACTORY -> a
    java.lang.String artist -> b
    java.lang.String getArtist() -> getArtist
    com.spacecaker.butter.helpers.lastfm.Album getInfo(java.lang.String,java.lang.String,java.lang.String) -> getInfo
    com.spacecaker.butter.helpers.lastfm.Album getInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getInfo
    void access$1(com.spacecaker.butter.helpers.lastfm.Album,java.lang.String) -> a
    java.lang.String access$2(com.spacecaker.butter.helpers.lastfm.Album) -> a
com.spacecaker.butter.helpers.lastfm.Album$AlbumFactory -> com.spacecaker.butter.helpers.lastfm.a:
    com.spacecaker.butter.helpers.lastfm.Album createItemFromElement(com.spacecaker.butter.helpers.DomElement) -> createItemFromElement
    java.lang.Object createItemFromElement(com.spacecaker.butter.helpers.DomElement) -> createItemFromElement
com.spacecaker.butter.helpers.lastfm.Artist -> com.spacecaker.butter.helpers.lastfm.Artist:
    com.spacecaker.butter.helpers.lastfm.ItemFactory FACTORY -> a
    com.spacecaker.butter.helpers.lastfm.PaginatedResult getImages(java.lang.String,java.lang.String) -> getImages
    com.spacecaker.butter.helpers.lastfm.PaginatedResult getImages(java.lang.String,int,int,java.lang.String) -> getImages
com.spacecaker.butter.helpers.lastfm.Artist$ArtistFactory -> com.spacecaker.butter.helpers.lastfm.b:
    com.spacecaker.butter.helpers.lastfm.Artist createItemFromElement(com.spacecaker.butter.helpers.DomElement) -> createItemFromElement
    java.lang.Object createItemFromElement(com.spacecaker.butter.helpers.DomElement) -> createItemFromElement
com.spacecaker.butter.helpers.lastfm.Caller -> com.spacecaker.butter.helpers.lastfm.Caller:
    com.spacecaker.butter.helpers.lastfm.Caller instance -> a
    java.lang.String apiRootUrl -> b
    java.lang.String userAgent -> c
    com.spacecaker.butter.helpers.lastfm.Result lastResult -> d
    com.spacecaker.butter.helpers.lastfm.Caller getInstance() -> getInstance
    com.spacecaker.butter.helpers.lastfm.Result call(java.lang.String,java.lang.String,java.lang.String[]) -> call
    com.spacecaker.butter.helpers.lastfm.Result call(java.lang.String,java.lang.String,java.util.Map) -> call
    com.spacecaker.butter.helpers.lastfm.Result call(java.lang.String,com.spacecaker.butter.helpers.lastfm.Session,java.lang.String[]) -> call
    com.spacecaker.butter.helpers.lastfm.Result call(java.lang.String,com.spacecaker.butter.helpers.lastfm.Session,java.util.Map) -> call
    com.spacecaker.butter.helpers.lastfm.Result call(java.lang.String,java.lang.String,java.util.Map,com.spacecaker.butter.helpers.lastfm.Session) -> a
    java.net.HttpURLConnection openConnection(java.lang.String) -> openConnection
    javax.xml.parsers.DocumentBuilder newDocumentBuilder() -> a
    java.lang.String buildPostBody(java.lang.String,java.util.Map,java.lang.String[]) -> a
com.spacecaker.butter.helpers.lastfm.Image -> com.spacecaker.butter.helpers.lastfm.Image:
    com.spacecaker.butter.helpers.lastfm.ItemFactory FACTORY -> a
    java.lang.String url -> b
    java.lang.String getUrl() -> getUrl
    void access$1(com.spacecaker.butter.helpers.lastfm.Image,java.lang.String) -> a
com.spacecaker.butter.helpers.lastfm.Image$ImageFactory -> com.spacecaker.butter.helpers.lastfm.c:
    com.spacecaker.butter.helpers.lastfm.Image createItemFromElement(com.spacecaker.butter.helpers.DomElement) -> createItemFromElement
    java.lang.Object createItemFromElement(com.spacecaker.butter.helpers.DomElement) -> createItemFromElement
com.spacecaker.butter.helpers.lastfm.ImageHolder -> com.spacecaker.butter.helpers.lastfm.ImageHolder:
    java.util.Map imageUrls -> imageUrls
    java.util.Set availableSizes() -> availableSizes
    java.lang.String getImageURL(com.spacecaker.butter.helpers.lastfm.ImageSize) -> getImageURL
    void loadImages(com.spacecaker.butter.helpers.lastfm.ImageHolder,com.spacecaker.butter.helpers.DomElement) -> loadImages
    java.lang.String getLargestImage() -> getLargestImage
com.spacecaker.butter.helpers.lastfm.ImageSize -> com.spacecaker.butter.helpers.lastfm.ImageSize:
    com.spacecaker.butter.helpers.lastfm.ImageSize SMALL -> SMALL
    com.spacecaker.butter.helpers.lastfm.ImageSize MEDIUM -> MEDIUM
    com.spacecaker.butter.helpers.lastfm.ImageSize LARGE -> LARGE
    com.spacecaker.butter.helpers.lastfm.ImageSize EXTRALARGE -> EXTRALARGE
    com.spacecaker.butter.helpers.lastfm.ImageSize MEGA -> MEGA
    com.spacecaker.butter.helpers.lastfm.ImageSize[] ENUM$VALUES -> a
    com.spacecaker.butter.helpers.lastfm.ImageSize[] values() -> values
    com.spacecaker.butter.helpers.lastfm.ImageSize valueOf(java.lang.String) -> valueOf
com.spacecaker.butter.helpers.lastfm.ItemFactory -> com.spacecaker.butter.helpers.lastfm.d:
    java.lang.Object createItemFromElement(com.spacecaker.butter.helpers.DomElement) -> createItemFromElement
com.spacecaker.butter.helpers.lastfm.ItemFactoryBuilder -> com.spacecaker.butter.helpers.lastfm.e:
    com.spacecaker.butter.helpers.lastfm.ItemFactoryBuilder INSTANCE -> a
    java.util.Map factories -> b
    com.spacecaker.butter.helpers.lastfm.ItemFactoryBuilder getFactoryBuilder() -> getFactoryBuilder
    void addItemFactory(java.lang.Class,com.spacecaker.butter.helpers.lastfm.ItemFactory) -> addItemFactory
    com.spacecaker.butter.helpers.lastfm.ItemFactory getItemFactory(java.lang.Class) -> getItemFactory
com.spacecaker.butter.helpers.lastfm.MusicEntry -> com.spacecaker.butter.helpers.lastfm.MusicEntry:
    java.lang.String name -> name
    java.lang.String url -> url
    java.lang.String mbid -> mbid
    java.lang.String id -> id
    int percentageChange -> percentageChange
    java.util.Collection tags -> tags
    java.lang.String getMbid() -> getMbid
    java.lang.String getName() -> getName
    java.lang.String getId() -> getId
    java.lang.String getUrl() -> getUrl
    java.util.Collection getTags() -> getTags
    java.lang.String toString() -> toString
    void loadStandardInfo(com.spacecaker.butter.helpers.lastfm.MusicEntry,com.spacecaker.butter.helpers.DomElement) -> loadStandardInfo
com.spacecaker.butter.helpers.lastfm.PaginatedResult -> com.spacecaker.butter.helpers.lastfm.PaginatedResult:
    int page -> a
    int totalPages -> b
    java.util.Collection pageResults -> c
    int getPage() -> getPage
    java.util.Collection getPageResults() -> getPageResults
    int getTotalPages() -> getTotalPages
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.spacecaker.butter.helpers.lastfm.ResponseBuilder -> com.spacecaker.butter.helpers.lastfm.ResponseBuilder:
    java.util.Collection buildCollection(com.spacecaker.butter.helpers.lastfm.Result,java.lang.Class) -> buildCollection
    java.util.Collection buildCollection(com.spacecaker.butter.helpers.lastfm.Result,com.spacecaker.butter.helpers.lastfm.ItemFactory) -> buildCollection
    java.util.Collection buildCollection(com.spacecaker.butter.helpers.DomElement,java.lang.Class) -> buildCollection
    java.util.Collection buildCollection(com.spacecaker.butter.helpers.DomElement,com.spacecaker.butter.helpers.lastfm.ItemFactory) -> buildCollection
    com.spacecaker.butter.helpers.lastfm.PaginatedResult buildPaginatedResult(com.spacecaker.butter.helpers.lastfm.Result,java.lang.Class) -> buildPaginatedResult
    com.spacecaker.butter.helpers.lastfm.PaginatedResult buildPaginatedResult(com.spacecaker.butter.helpers.lastfm.Result,com.spacecaker.butter.helpers.lastfm.ItemFactory) -> buildPaginatedResult
    com.spacecaker.butter.helpers.lastfm.PaginatedResult buildPaginatedResult(com.spacecaker.butter.helpers.DomElement,com.spacecaker.butter.helpers.DomElement,java.lang.Class) -> buildPaginatedResult
    com.spacecaker.butter.helpers.lastfm.PaginatedResult buildPaginatedResult(com.spacecaker.butter.helpers.DomElement,com.spacecaker.butter.helpers.DomElement,com.spacecaker.butter.helpers.lastfm.ItemFactory) -> buildPaginatedResult
    java.lang.Object buildItem(com.spacecaker.butter.helpers.lastfm.Result,java.lang.Class) -> buildItem
    java.lang.Object buildItem(com.spacecaker.butter.helpers.lastfm.Result,com.spacecaker.butter.helpers.lastfm.ItemFactory) -> buildItem
    java.lang.Object buildItem(com.spacecaker.butter.helpers.DomElement,java.lang.Class) -> buildItem
com.spacecaker.butter.helpers.lastfm.Result -> com.spacecaker.butter.helpers.lastfm.Result:
    com.spacecaker.butter.helpers.lastfm.Result$Status status -> status
    java.lang.String errorMessage -> errorMessage
    int errorCode -> errorCode
    int httpErrorCode -> httpErrorCode
    org.w3c.dom.Document resultDocument -> resultDocument
    com.spacecaker.butter.helpers.lastfm.Result createOkResult(org.w3c.dom.Document) -> a
    com.spacecaker.butter.helpers.lastfm.Result createHttpErrorResult(int,java.lang.String) -> a
    com.spacecaker.butter.helpers.lastfm.Result createRestErrorResult(int,java.lang.String) -> b
    boolean isSuccessful() -> isSuccessful
    int getErrorCode() -> getErrorCode
    int getHttpErrorCode() -> getHttpErrorCode
    com.spacecaker.butter.helpers.lastfm.Result$Status getStatus() -> getStatus
    org.w3c.dom.Document getResultDocument() -> getResultDocument
    java.lang.String getErrorMessage() -> getErrorMessage
    com.spacecaker.butter.helpers.DomElement getContentElement() -> getContentElement
    java.lang.String toString() -> toString
com.spacecaker.butter.helpers.lastfm.Result$Status -> com.spacecaker.butter.helpers.lastfm.Result$Status:
    com.spacecaker.butter.helpers.lastfm.Result$Status OK -> OK
    com.spacecaker.butter.helpers.lastfm.Result$Status FAILED -> FAILED
    com.spacecaker.butter.helpers.lastfm.Result$Status[] ENUM$VALUES -> a
    com.spacecaker.butter.helpers.lastfm.Result$Status[] values() -> values
    com.spacecaker.butter.helpers.lastfm.Result$Status valueOf(java.lang.String) -> valueOf
com.spacecaker.butter.helpers.lastfm.Session -> com.spacecaker.butter.helpers.lastfm.Session:
    java.lang.String apiKey -> a
    java.lang.String secret -> b
    java.lang.String username -> c
    java.lang.String key -> d
    boolean subscriber -> e
    com.spacecaker.butter.helpers.lastfm.Session createSession(java.lang.String,java.lang.String,java.lang.String) -> createSession
    com.spacecaker.butter.helpers.lastfm.Session createSession(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> createSession
    java.lang.String getSecret() -> getSecret
    java.lang.String getApiKey() -> getApiKey
    java.lang.String getKey() -> getKey
    boolean isSubscriber() -> isSubscriber
    java.lang.String getUsername() -> getUsername
    java.lang.String toString() -> toString
com.spacecaker.butter.helpers.utils.ApolloUtils -> com.spacecaker.butter.helpers.utils.ApolloUtils:
    void setBackground(android.view.View,android.graphics.Bitmap) -> setBackground
    void runnableBackground(android.widget.ImageView,android.graphics.Bitmap) -> runnableBackground
    boolean isOnline(android.content.Context) -> isOnline
    boolean isTablet(android.content.Context) -> isTablet
    void showUpTitleOnly(android.app.ActionBar) -> showUpTitleOnly
    void listHeader(android.app.Fragment,android.view.View,java.lang.String) -> listHeader
    void setListPadding(android.app.Fragment,android.widget.ListView,int,int,int,int) -> setListPadding
    boolean isAlbum(java.lang.String) -> isAlbum
    boolean isArtist(java.lang.String) -> isArtist
    boolean isGenre(java.lang.String) -> isGenre
    void setArtistId(java.lang.String,long,java.lang.String,android.content.Context) -> setArtistId
    java.lang.Long getArtistId(java.lang.String,java.lang.String,android.content.Context) -> getArtistId
    void shopFor(android.content.Context,java.lang.String) -> shopFor
    java.lang.String escapeForFileSystem(java.lang.String) -> escapeForFileSystem
    boolean downloadFile(java.lang.String,java.io.File) -> downloadFile
    void showToast(int,android.widget.Toast,android.content.Context) -> showToast
com.spacecaker.butter.helpers.utils.ApolloUtils$1 -> com.spacecaker.butter.helpers.utils.a:
    android.widget.ImageView val$view -> a
    android.graphics.Bitmap val$bitmap -> b
    void run() -> run
com.spacecaker.butter.helpers.utils.ImageUtils -> com.spacecaker.butter.helpers.utils.ImageUtils:
    java.io.File getFile(android.content.Context,com.spacecaker.butter.cache.ImageInfo) -> a
    android.graphics.Bitmap getNormalImageFromDisk(android.content.Context,com.spacecaker.butter.cache.ImageInfo) -> getNormalImageFromDisk
    android.graphics.Bitmap getThumbImageFromDisk(android.content.Context,com.spacecaker.butter.cache.ImageInfo,int) -> getThumbImageFromDisk
    android.graphics.Bitmap getThumbImageFromDisk(android.content.Context,java.io.File,int) -> getThumbImageFromDisk
    java.io.File getImageFromGallery(android.content.Context,com.spacecaker.butter.cache.ImageInfo) -> getImageFromGallery
    java.io.File getImageFromWeb(android.content.Context,com.spacecaker.butter.cache.ImageInfo) -> getImageFromWeb
    java.io.File getImageFromMediaStore(android.content.Context,com.spacecaker.butter.cache.ImageInfo) -> getImageFromMediaStore
    void deleteDiskCache(android.content.Context) -> deleteDiskCache
    java.lang.String createShortTag(com.spacecaker.butter.cache.ImageInfo) -> createShortTag
com.spacecaker.butter.helpers.utils.MusicUtils -> com.spacecaker.butter.helpers.utils.MusicUtils:
    java.lang.StringBuilder sFormatBuilder -> a
    java.util.Formatter sFormatter -> b
    com.spacecaker.butter.IApolloService mService -> mService
    java.util.HashMap sConnectionMap -> c
    long[] sEmptyList -> d
    java.lang.Object[] sTimeArgs -> e
    android.content.ContentValues[] sContentValuesCache -> f
    com.spacecaker.butter.service.ServiceToken bindToService(android.app.Activity) -> bindToService
    com.spacecaker.butter.service.ServiceToken bindToService(android.content.Context,android.content.ServiceConnection) -> bindToService
    void unbindFromService(com.spacecaker.butter.service.ServiceToken) -> unbindFromService
    java.lang.String makeAlbumsLabel(android.content.Context,int,int,boolean) -> makeAlbumsLabel
    int getCardId(android.content.Context) -> getCardId
    android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int) -> query
    android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    void shuffleAll(android.content.Context,android.database.Cursor) -> shuffleAll
    void playAll(android.content.Context,android.database.Cursor) -> playAll
    void playAll(android.content.Context,android.database.Cursor,int) -> playAll
    void playAll(android.content.Context,long[],int) -> playAll
    void playAll$2c9a1635(android.database.Cursor,int,boolean) -> a
    long[] getSongListForCursor(android.database.Cursor) -> getSongListForCursor
    void playAll$5d12d7b3(long[],int,boolean) -> a
    long[] getQueue() -> getQueue
    int getIntPref(android.content.Context,java.lang.String,int) -> getIntPref
    long[] getSongListForArtist(android.content.Context,long) -> getSongListForArtist
    long[] getSongListForAlbum(android.content.Context,long) -> getSongListForAlbum
    long[] getSongListForGenre(android.content.Context,long) -> getSongListForGenre
    long[] getSongListForPlaylist(android.content.Context,long) -> getSongListForPlaylist
    long createPlaylist(android.content.Context,java.lang.String) -> createPlaylist
    long getFavoritesId(android.content.Context) -> getFavoritesId
    void setRingtone(android.content.Context,long) -> setRingtone
    void clearPlaylist(android.content.Context,int) -> clearPlaylist
    void addToPlaylist(android.content.Context,long[],long) -> addToPlaylist
    void toggleFavorite() -> toggleFavorite
    void addToFavorites(android.content.Context,long) -> addToFavorites
    boolean isFavorite(android.content.Context,long) -> isFavorite
    void removeFromFavorites(android.content.Context,long) -> removeFromFavorites
    void setFavoriteImage(android.widget.ImageButton) -> setFavoriteImage
    void renamePlaylist(android.content.Context,long,java.lang.String) -> renamePlaylist
    void addToCurrentPlaylist(android.content.Context,long[]) -> addToCurrentPlaylist
    java.lang.String makeTimeString(android.content.Context,long) -> makeTimeString
    long getCurrentAlbumId() -> getCurrentAlbumId
    long getCurrentArtistId() -> getCurrentArtistId
    long getCurrentAudioId() -> getCurrentAudioId
    java.lang.String getArtistName() -> getArtistName
    java.lang.String getAlbumName() -> getAlbumName
    java.lang.String getTrackName() -> getTrackName
    long getDuration() -> getDuration
    void doSearch(android.content.Context,android.database.Cursor,int) -> doSearch
    void removeAllTracks() -> removeAllTracks
    int removeTrack(long) -> removeTrack
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getArtistName(android.content.Context,long,boolean) -> getArtistName
    java.lang.String getAlbumName(android.content.Context,long,boolean) -> getAlbumName
    java.lang.String getPlaylistName(android.content.Context,long) -> getPlaylistName
    java.lang.String getGenreName(android.content.Context,long,boolean) -> getGenreName
    java.lang.String parseGenreName(android.content.Context,java.lang.String) -> parseGenreName
    boolean isPlaying() -> isPlaying
    int getQueuePosition() -> getQueuePosition
    void makePlaylistList(android.content.Context,boolean,java.util.List) -> makePlaylistList
    void notifyWidgets(java.lang.String) -> notifyWidgets
com.spacecaker.butter.helpers.utils.StringUtilities -> com.spacecaker.butter.helpers.utils.StringUtilities:
    java.security.MessageDigest digest -> a
    java.util.regex.Pattern MBID_PATTERN -> b
    java.util.regex.Pattern MD5_PATTERN -> c
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    boolean isMbid(java.lang.String) -> isMbid
    java.util.Map map(java.lang.String[]) -> map
    java.lang.String cleanUp(java.lang.String) -> cleanUp
    boolean isMD5(java.lang.String) -> isMD5
    boolean convertToBoolean(java.lang.String) -> convertToBoolean
    java.lang.String convertFromBoolean(boolean) -> convertFromBoolean
com.spacecaker.butter.helpers.utils.ThemeUtils -> com.spacecaker.butter.helpers.utils.ThemeUtils:
    java.lang.String getThemePackageName(android.content.Context,java.lang.String) -> getThemePackageName
    void setThemePackageName(android.content.Context,java.lang.String) -> setThemePackageName
    void loadThemeResource(android.content.res.Resources,java.lang.String,java.lang.String,android.view.View,int) -> loadThemeResource
    void initThemeChooser(android.content.Context,android.view.View,java.lang.String,int) -> initThemeChooser
    void setTextColor(android.content.Context,android.widget.TextView,java.lang.String) -> setTextColor
    void setBackgroundColor(android.content.Context,android.view.View,java.lang.String) -> setBackgroundColor
    void setImageButton(android.content.Context,android.widget.ImageButton,java.lang.String) -> setImageButton
    void setMarginDrawable(android.content.Context,android.support.v4.view.ViewPager,java.lang.String) -> setMarginDrawable
    void setActionBarBackground(android.content.Context,android.app.ActionBar,java.lang.String) -> setActionBarBackground
    void setActionBarItem(android.content.Context,android.view.MenuItem,java.lang.String) -> setActionBarItem
    void setProgessDrawable(android.content.Context,android.widget.SeekBar,java.lang.String) -> setProgessDrawable
    boolean overflowLight(android.content.Context) -> overflowLight
com.spacecaker.butter.helpers.utils.VisualizerUtils -> com.spacecaker.butter.helpers.utils.VisualizerUtils:
    android.media.audiofx.Visualizer mVisualizer -> a
    java.lang.ref.WeakReference mView -> b
    void updateVisualizerView(java.lang.ref.WeakReference) -> updateVisualizerView
    void updateVisualizerFFT(byte[]) -> updateVisualizerFFT
    void updateVisualizer(byte[]) -> updateVisualizer
    void releaseVisualizer() -> releaseVisualizer
    void initVisualizer(android.media.MediaPlayer) -> initVisualizer
com.spacecaker.butter.helpers.utils.VisualizerUtils$1 -> com.spacecaker.butter.helpers.utils.b:
    void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onWaveFormDataCapture
    void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onFftDataCapture
com.spacecaker.butter.helpers.visualizer.AudioData -> com.spacecaker.butter.helpers.visualizer.AudioData:
    byte[] bytes -> bytes
com.spacecaker.butter.helpers.visualizer.BarGraphRenderer -> com.spacecaker.butter.helpers.visualizer.BarGraphRenderer:
    android.content.Context mContext -> a
    int[] mData -> b
    void onRender(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
com.spacecaker.butter.helpers.visualizer.FFTData -> com.spacecaker.butter.helpers.visualizer.FFTData:
    byte[] bytes -> bytes
com.spacecaker.butter.helpers.visualizer.Renderer -> com.spacecaker.butter.helpers.visualizer.Renderer:
    float[] mPoints -> mPoints
    float[] mFFTPoints -> mFFTPoints
    void onRender(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
    void render(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.AudioData,android.graphics.Rect) -> render
    void render(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.FFTData,android.graphics.Rect) -> render
com.spacecaker.butter.helpers.visualizer.SolidBarGraphRenderer -> com.spacecaker.butter.helpers.visualizer.SolidBarGraphRenderer:
    android.content.Context mContext -> a
    int[] mData -> b
    void onRender(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
com.spacecaker.butter.helpers.visualizer.WaveformRenderer -> com.spacecaker.butter.helpers.visualizer.WaveformRenderer:
    float amplitude -> a
    android.content.Context mContext -> b
    android.graphics.Paint mBrightPaint -> c
    android.graphics.Paint paintBrightBlur -> d
    android.graphics.Paint mPaint -> e
    android.graphics.Paint paintBlur -> f
    void onRender(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.AudioData,android.graphics.Rect) -> onRender
    void onRender(android.graphics.Canvas,com.spacecaker.butter.helpers.visualizer.FFTData,android.graphics.Rect) -> onRender
com.spacecaker.butter.menu.PlaylistDialog -> com.spacecaker.butter.menu.PlaylistDialog:
    android.app.AlertDialog mPlaylistDialog -> a
    java.lang.String action -> b
    android.widget.EditText mPlaylist -> c
    java.lang.String mDefaultName -> d
    java.lang.String mOriginalName -> e
    long mRenameId -> f
    long[] mList -> g
    android.content.DialogInterface$OnClickListener mRenamePlaylistListener -> h
    android.content.DialogInterface$OnClickListener mCreatePlaylistListener -> i
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onCancel(android.content.DialogInterface) -> onCancel
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onShow(android.content.DialogInterface) -> onShow
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    int idForplaylist(java.lang.String) -> a
    java.lang.String makePlaylistName() -> a
    void setSaveButton() -> b
    void onResume() -> onResume
    android.widget.EditText access$0(com.spacecaker.butter.menu.PlaylistDialog) -> a
    long access$1(com.spacecaker.butter.menu.PlaylistDialog) -> b
    int access$2(com.spacecaker.butter.menu.PlaylistDialog,java.lang.String) -> a
    long[] access$3(com.spacecaker.butter.menu.PlaylistDialog) -> c
com.spacecaker.butter.menu.PlaylistDialog$1 -> com.spacecaker.butter.menu.a:
    com.spacecaker.butter.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.spacecaker.butter.menu.PlaylistDialog$2 -> com.spacecaker.butter.menu.b:
    com.spacecaker.butter.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.spacecaker.butter.menu.PlaylistDialog$3 -> com.spacecaker.butter.menu.c:
    com.spacecaker.butter.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.spacecaker.butter.menu.PlaylistPicker -> com.spacecaker.butter.menu.PlaylistPicker:
    android.app.AlertDialog mPlayListPickerDialog -> d
    java.util.List mAllPlayLists -> a
    java.util.List mPlayListNames -> b
    long[] mList -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
com.spacecaker.butter.menu.PlaylistPickerDialog -> com.spacecaker.butter.menu.PlaylistPickerDialog:
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
com.spacecaker.butter.preferences.SettingsFragment -> com.spacecaker.butter.preferences.SettingsFragment:
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
com.spacecaker.butter.preferences.SettingsHolder -> com.spacecaker.butter.preferences.SettingsHolder:
    android.content.Context mContext -> a
    com.spacecaker.butter.service.ServiceToken mToken -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
com.spacecaker.butter.preferences.SettingsHolder$1 -> com.spacecaker.butter.preferences.a:
    com.spacecaker.butter.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.spacecaker.butter.preferences.SettingsHolder$2 -> com.spacecaker.butter.preferences.b:
    com.spacecaker.butter.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    com.spacecaker.butter.preferences.SettingsHolder access$0(com.spacecaker.butter.preferences.SettingsHolder$2) -> a
com.spacecaker.butter.preferences.SettingsHolder$2$1 -> com.spacecaker.butter.preferences.c:
    com.spacecaker.butter.preferences.SettingsHolder$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.spacecaker.butter.preferences.SettingsHolder$2$2 -> com.spacecaker.butter.preferences.d:
    com.spacecaker.butter.preferences.SettingsHolder$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.spacecaker.butter.preferences.SharedPreferencesCompat -> com.spacecaker.butter.preferences.SharedPreferencesCompat:
    java.lang.reflect.Method sApplyMethod -> a
    java.lang.reflect.Method findApplyMethod() -> a
    void apply(android.content.SharedPreferences$Editor) -> apply
com.spacecaker.butter.preferences.ThemePreview -> com.spacecaker.butter.preferences.ThemePreview:
    java.lang.CharSequence themeName -> a
    java.lang.CharSequence themePackageName -> b
    java.lang.CharSequence themeDescription -> c
    android.graphics.drawable.Drawable themePreview -> d
    void onBindView(android.view.View) -> onBindView
    void setTheme(java.lang.CharSequence) -> setTheme
    java.lang.CharSequence getValue() -> getValue
com.spacecaker.butter.service.ApolloService -> com.spacecaker.butter.service.ApolloService:
    int NOW -> NOW
    int NEXT -> NEXT
    int LAST -> LAST
    int PLAYBACKSERVICE_STATUS -> PLAYBACKSERVICE_STATUS
    int SHUFFLE_NONE -> SHUFFLE_NONE
    int SHUFFLE_NORMAL -> SHUFFLE_NORMAL
    int SHUFFLE_AUTO -> SHUFFLE_AUTO
    int REPEAT_NONE -> REPEAT_NONE
    int REPEAT_CURRENT -> REPEAT_CURRENT
    int REPEAT_ALL -> REPEAT_ALL
    java.lang.String APOLLO_PACKAGE_NAME -> APOLLO_PACKAGE_NAME
    java.lang.String MUSIC_PACKAGE_NAME -> MUSIC_PACKAGE_NAME
    java.lang.String PLAYSTATE_CHANGED -> PLAYSTATE_CHANGED
    java.lang.String META_CHANGED -> META_CHANGED
    java.lang.String FAVORITE_CHANGED -> FAVORITE_CHANGED
    java.lang.String QUEUE_CHANGED -> QUEUE_CHANGED
    java.lang.String REPEATMODE_CHANGED -> REPEATMODE_CHANGED
    java.lang.String SHUFFLEMODE_CHANGED -> SHUFFLEMODE_CHANGED
    java.lang.String PROGRESSBAR_CHANGED -> PROGRESSBAR_CHANGED
    java.lang.String REFRESH_PROGRESSBAR -> REFRESH_PROGRESSBAR
    java.lang.String CYCLEREPEAT_ACTION -> CYCLEREPEAT_ACTION
    java.lang.String TOGGLESHUFFLE_ACTION -> TOGGLESHUFFLE_ACTION
    java.lang.String SERVICECMD -> SERVICECMD
    java.lang.String CMDNAME -> CMDNAME
    java.lang.String CMDTOGGLEPAUSE -> CMDTOGGLEPAUSE
    java.lang.String CMDSTOP -> CMDSTOP
    java.lang.String CMDPAUSE -> CMDPAUSE
    java.lang.String CMDPLAY -> CMDPLAY
    java.lang.String CMDPREVIOUS -> CMDPREVIOUS
    java.lang.String CMDNEXT -> CMDNEXT
    java.lang.String CMDNOTIF -> CMDNOTIF
    java.lang.String CMDTOGGLEFAVORITE -> CMDTOGGLEFAVORITE
    java.lang.String CMDCYCLEREPEAT -> CMDCYCLEREPEAT
    java.lang.String CMDTOGGLESHUFFLE -> CMDTOGGLESHUFFLE
    java.lang.String TOGGLEPAUSE_ACTION -> TOGGLEPAUSE_ACTION
    java.lang.String PAUSE_ACTION -> PAUSE_ACTION
    java.lang.String PREVIOUS_ACTION -> PREVIOUS_ACTION
    java.lang.String NEXT_ACTION -> NEXT_ACTION
    android.app.Notification status -> b
    com.spacecaker.butter.service.ApolloService$MultiPlayer mPlayer -> c
    java.lang.String mFileToPlay -> d
    int mShuffleMode -> e
    int mRepeatMode -> f
    int mMediaMountedCount -> g
    long[] mAutoShuffleList -> h
    long[] mPlayList -> i
    int mPlayListLen -> j
    java.util.Vector mHistory -> k
    android.database.Cursor mCursor -> l
    int mPlayPos -> m
    int mNextPlayPos -> n
    com.spacecaker.butter.service.ApolloService$Shuffler mRand -> o
    int mOpenFailedCounter -> p
    java.lang.String[] mCursorCols -> a
    android.content.BroadcastReceiver mUnmountReceiver -> q
    android.os.PowerManager$WakeLock mWakeLock -> r
    int mServiceStartId -> s
    boolean mServiceInUse -> t
    boolean mIsSupposedToBePlaying -> u
    boolean mQuietMode -> v
    android.media.AudioManager mAudioManager -> w
    boolean mQueueIsSaveable -> x
    boolean mPausedByTransientLossOfFocus -> y
    android.content.SharedPreferences mPreferences -> z
    int mCardId -> A
    com.spacecaker.butter.app.widgets.AppWidget11 mAppWidgetProvider1x1 -> B
    com.spacecaker.butter.app.widgets.AppWidget42 mAppWidgetProvider4x2 -> C
    com.spacecaker.butter.app.widgets.AppWidget422 mAppWidgetProvider4x22 -> D
    com.spacecaker.butter.app.widgets.AppWidget41 mAppWidgetProvider4x1 -> E
    java.lang.String mAlbumBitmapTag -> F
    android.graphics.Bitmap mAlbumBitmap -> G
    com.spacecaker.butter.helpers.GetBitmapTask mAlbumBitmapTask -> H
    android.media.RemoteControlClient mRemoteControlClient -> I
    android.os.Handler mMediaplayerHandler -> J
    android.content.BroadcastReceiver mIntentReceiver -> K
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener -> L
    char[] hexdigits -> M
    android.os.Handler mDelayedStopHandler -> N
    android.os.IBinder mBinder -> O
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void saveQueue(boolean) -> a
    void reloadQueue() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onRebind(android.content.Intent) -> onRebind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    boolean onUnbind(android.content.Intent) -> onUnbind
    void closeExternalStorageFiles(java.lang.String) -> closeExternalStorageFiles
    void registerExternalStorageListener() -> registerExternalStorageListener
    void notifyChange(java.lang.String) -> notifyChange
    void ensurePlayListCapacity(int) -> a
    void addToPlayList(long[],int) -> a
    void enqueue(long[],int) -> enqueue
    void open(long[],int) -> open
    long[] getQueue() -> getQueue
    android.database.Cursor getCursorForId(long) -> a
    void openCurrentAndNext() -> b
    void setNextTrack() -> c
    boolean open(java.lang.String) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    void play() -> play
    void updateNotification() -> d
    void stop(boolean) -> b
    void stop() -> stop
    void pause() -> pause
    boolean isPlaying() -> isPlaying
    void prev() -> prev
    int getNextPosition(boolean) -> c
    void gotoNext(boolean) -> gotoNext
    void cycleRepeat() -> cycleRepeat
    void toggleShuffle() -> toggleShuffle
    void gotoIdleState() -> e
    void saveBookmarkIfNeeded() -> f
    void doAutoShuffleUpdate() -> g
    boolean makeAutoShuffleList() -> h
    int removeTracks(int,int) -> removeTracks
    int removeTracksInternal(int,int) -> a
    void updateAlbumBitmap() -> i
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> bitmapReady
    int removeTrack(long) -> removeTrack
    void setShuffleMode(int) -> setShuffleMode
    int getShuffleMode() -> getShuffleMode
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    int getQueuePosition() -> getQueuePosition
    void setQueuePosition(int) -> setQueuePosition
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    java.lang.String getAlbumName() -> getAlbumName
    long getAlbumId() -> getAlbumId
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    java.lang.String getTrackName() -> getTrackName
    boolean isPodcast() -> j
    long getBookmark() -> k
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    void setAudioSessionId(int) -> setAudioSessionId
    int getAudioSessionId() -> getAudioSessionId
    void toggleFavorite() -> toggleFavorite
    boolean isFavorite() -> isFavorite
    boolean isFavorite(long) -> isFavorite
    void removeFromFavorites() -> removeFromFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    void addToFavorites() -> addToFavorites
    void addToFavorites(long) -> addToFavorites
    android.os.Handler access$0(com.spacecaker.butter.service.ApolloService) -> a
    com.spacecaker.butter.service.ApolloService$MultiPlayer access$1(com.spacecaker.butter.service.ApolloService) -> b
    boolean access$2(com.spacecaker.butter.service.ApolloService) -> c
    void access$3(com.spacecaker.butter.service.ApolloService) -> d
    int access$4(com.spacecaker.butter.service.ApolloService) -> e
    long[] access$5(com.spacecaker.butter.service.ApolloService) -> f
    void access$6(com.spacecaker.butter.service.ApolloService,int) -> a
    android.database.Cursor access$7(com.spacecaker.butter.service.ApolloService) -> g
    void access$8(com.spacecaker.butter.service.ApolloService,android.database.Cursor) -> a
    int access$9(com.spacecaker.butter.service.ApolloService) -> h
    android.database.Cursor access$10(com.spacecaker.butter.service.ApolloService,long) -> a
    void access$11(com.spacecaker.butter.service.ApolloService) -> i
    void access$12(com.spacecaker.butter.service.ApolloService) -> j
    void access$13(com.spacecaker.butter.service.ApolloService) -> k
    int access$14(com.spacecaker.butter.service.ApolloService) -> l
    android.os.PowerManager$WakeLock access$15(com.spacecaker.butter.service.ApolloService) -> m
    void access$16(com.spacecaker.butter.service.ApolloService,boolean) -> a
    boolean access$17(com.spacecaker.butter.service.ApolloService) -> n
    com.spacecaker.butter.app.widgets.AppWidget422 access$18(com.spacecaker.butter.service.ApolloService) -> o
    com.spacecaker.butter.app.widgets.AppWidget42 access$19(com.spacecaker.butter.service.ApolloService) -> p
    com.spacecaker.butter.app.widgets.AppWidget41 access$20(com.spacecaker.butter.service.ApolloService) -> q
    com.spacecaker.butter.app.widgets.AppWidget11 access$21(com.spacecaker.butter.service.ApolloService) -> r
    boolean access$22(com.spacecaker.butter.service.ApolloService) -> s
    void access$23$5aa64632(com.spacecaker.butter.service.ApolloService) -> t
    int access$24(com.spacecaker.butter.service.ApolloService) -> u
    void access$25(com.spacecaker.butter.service.ApolloService,boolean) -> b
    int access$26(com.spacecaker.butter.service.ApolloService) -> v
    void access$27(com.spacecaker.butter.service.ApolloService,int) -> b
    void access$28(com.spacecaker.butter.service.ApolloService,int) -> c
    void access$29(com.spacecaker.butter.service.ApolloService) -> w
com.spacecaker.butter.service.ApolloService$1 -> com.spacecaker.butter.service.a:
    float mCurrentVolume -> a
    com.spacecaker.butter.service.ApolloService this$0 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.spacecaker.butter.service.ApolloService$2 -> com.spacecaker.butter.service.b:
    com.spacecaker.butter.service.ApolloService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.service.ApolloService$3 -> com.spacecaker.butter.service.c:
    com.spacecaker.butter.service.ApolloService this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.spacecaker.butter.service.ApolloService$4 -> com.spacecaker.butter.service.d:
    com.spacecaker.butter.service.ApolloService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.spacecaker.butter.service.ApolloService$5 -> com.spacecaker.butter.service.e:
    com.spacecaker.butter.service.ApolloService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.service.ApolloService$MultiPlayer -> com.spacecaker.butter.service.f:
    android.media.MediaPlayer mCurrentMediaPlayer -> d
    android.media.MediaPlayer mNextMediaPlayer -> e
    android.os.Handler mHandler -> f
    boolean mIsInitialized -> g
    android.media.MediaPlayer$OnCompletionListener listener -> a
    android.media.MediaPlayer$OnErrorListener errorListener -> b
    com.spacecaker.butter.service.ApolloService this$0 -> c
    void setDataSource(java.lang.String) -> setDataSource
    boolean setDataSourceImpl(android.media.MediaPlayer,java.lang.String) -> a
    void setNextDataSource(java.lang.String) -> setNextDataSource
    boolean isInitialized() -> isInitialized
    void start() -> start
    void stop() -> stop
    void release() -> release
    void pause() -> pause
    void setHandler(android.os.Handler) -> setHandler
    long duration() -> duration
    long position() -> position
    long seek(long) -> seek
    void setVolume(float) -> setVolume
    void setAudioSessionId(int) -> setAudioSessionId
    int getAudioSessionId() -> getAudioSessionId
    android.media.MediaPlayer access$0(com.spacecaker.butter.service.ApolloService$MultiPlayer) -> a
    android.media.MediaPlayer access$1(com.spacecaker.butter.service.ApolloService$MultiPlayer) -> b
    void access$2(com.spacecaker.butter.service.ApolloService$MultiPlayer,android.media.MediaPlayer) -> a
    void access$3$57c5cadb(com.spacecaker.butter.service.ApolloService$MultiPlayer) -> c
    android.os.Handler access$4(com.spacecaker.butter.service.ApolloService$MultiPlayer) -> d
    void access$5$35de28e8(com.spacecaker.butter.service.ApolloService$MultiPlayer) -> e
com.spacecaker.butter.service.ApolloService$MultiPlayer$1 -> com.spacecaker.butter.service.g:
    com.spacecaker.butter.service.ApolloService$MultiPlayer this$1 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.spacecaker.butter.service.ApolloService$MultiPlayer$2 -> com.spacecaker.butter.service.h:
    com.spacecaker.butter.service.ApolloService$MultiPlayer this$1 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.spacecaker.butter.service.ApolloService$ServiceStub -> com.spacecaker.butter.service.i:
    java.lang.ref.WeakReference mService -> a
    void openFile(java.lang.String) -> openFile
    void open(long[],int) -> open
    long getIdFromPath(java.lang.String) -> getIdFromPath
    int getQueuePosition() -> getQueuePosition
    void setQueuePosition(int) -> setQueuePosition
    boolean isPlaying() -> isPlaying
    void stop() -> stop
    void pause() -> pause
    void play() -> play
    void prev() -> prev
    void next() -> next
    java.lang.String getTrackName() -> getTrackName
    java.lang.String getAlbumName() -> getAlbumName
    android.graphics.Bitmap getAlbumBitmap() -> getAlbumBitmap
    long getAlbumId() -> getAlbumId
    java.lang.String getArtistName() -> getArtistName
    long getArtistId() -> getArtistId
    void enqueue(long[],int) -> enqueue
    long[] getQueue() -> getQueue
    java.lang.String getPath() -> getPath
    long getAudioId() -> getAudioId
    long position() -> position
    long duration() -> duration
    long seek(long) -> seek
    void setShuffleMode(int) -> setShuffleMode
    int getShuffleMode() -> getShuffleMode
    int removeTracks(int,int) -> removeTracks
    int removeTrack(long) -> removeTrack
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    int getMediaMountedCount() -> getMediaMountedCount
    int getAudioSessionId() -> getAudioSessionId
    void addToFavorites(long) -> addToFavorites
    void removeFromFavorites(long) -> removeFromFavorites
    boolean isFavorite(long) -> isFavorite
    void toggleFavorite() -> toggleFavorite
    void notifyChange(java.lang.String) -> notifyChange
com.spacecaker.butter.service.ApolloService$Shuffler -> com.spacecaker.butter.service.j:
    int mPrevious -> a
    java.util.Random mRandom -> b
    int nextInt(int) -> nextInt
com.spacecaker.butter.service.MediaButtonIntentReceiver -> com.spacecaker.butter.service.MediaButtonIntentReceiver:
    long mLastClickTime -> a
    boolean mDown -> b
    boolean mLaunched -> c
    android.os.Handler mHandler -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean access$0() -> a
    void access$1$1385ff() -> b
com.spacecaker.butter.service.MediaButtonIntentReceiver$1 -> com.spacecaker.butter.service.k:
    void handleMessage(android.os.Message) -> handleMessage
com.spacecaker.butter.service.ServiceBinder -> com.spacecaker.butter.service.ServiceBinder:
    android.content.ServiceConnection mCallback -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.spacecaker.butter.service.ServiceToken -> com.spacecaker.butter.service.ServiceToken:
    android.content.ContextWrapper mWrappedContext -> mWrappedContext
com.spacecaker.butter.ui.adapters.AlbumAdapter -> com.spacecaker.butter.ui.adapters.AlbumAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.content.Context mContext -> d
    com.spacecaker.butter.cache.ImageProvider mImageProvider -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.spacecaker.butter.ui.adapters.ArtistAdapter -> com.spacecaker.butter.ui.adapters.ArtistAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.content.Context mContext -> d
    com.spacecaker.butter.cache.ImageProvider mImageProvider -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.spacecaker.butter.ui.adapters.ArtistAlbumAdapter -> com.spacecaker.butter.ui.adapters.ArtistAlbumAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.content.Context mContext -> d
    com.spacecaker.butter.cache.ImageProvider mImageProvider -> e
    android.view.View$OnClickListener showContextMenu -> f
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.spacecaker.butter.ui.adapters.ArtistAlbumAdapter$1 -> com.spacecaker.butter.ui.adapters.a:
    com.spacecaker.butter.ui.adapters.ArtistAlbumAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.adapters.GenreAdapter -> com.spacecaker.butter.ui.adapters.GenreAdapter:
    java.lang.ref.WeakReference holderReference -> a
    int left -> b
    android.content.Context mContext -> c
    android.view.View$OnClickListener showContextMenu -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.spacecaker.butter.ui.adapters.GenreAdapter$1 -> com.spacecaker.butter.ui.adapters.b:
    com.spacecaker.butter.ui.adapters.GenreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.adapters.PagerAdapter -> com.spacecaker.butter.ui.adapters.PagerAdapter:
    java.util.ArrayList mFragments -> a
    void addFragment(android.app.Fragment) -> addFragment
    int getCount() -> getCount
    android.app.Fragment getItem(int) -> getItem
    void refresh() -> refresh
com.spacecaker.butter.ui.adapters.PlaylistAdapter -> com.spacecaker.butter.ui.adapters.PlaylistAdapter:
    java.lang.ref.WeakReference holderReference -> a
    android.content.Context mContext -> b
    android.view.View$OnClickListener showContextMenu -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.spacecaker.butter.ui.adapters.PlaylistAdapter$1 -> com.spacecaker.butter.ui.adapters.c:
    com.spacecaker.butter.ui.adapters.PlaylistAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.adapters.QuickQueueAdapter -> com.spacecaker.butter.ui.adapters.QuickQueueAdapter:
    java.lang.ref.WeakReference holderReference -> a
    android.content.Context mContext -> b
    com.spacecaker.butter.cache.ImageProvider mImageProvider -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.spacecaker.butter.ui.adapters.RecentlyAddedAdapter -> com.spacecaker.butter.ui.adapters.RecentlyAddedAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.content.Context mContext -> d
    com.spacecaker.butter.cache.ImageProvider mImageProvider -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.spacecaker.butter.ui.adapters.ScrollingTabsAdapter -> com.spacecaker.butter.ui.adapters.ScrollingTabsAdapter:
    android.app.Activity activity -> a
    android.view.View getView(int) -> getView
com.spacecaker.butter.ui.adapters.TabAdapter -> com.spacecaker.butter.ui.adapters.TabAdapter:
    android.view.View getView(int) -> getView
com.spacecaker.butter.ui.adapters.TrackAdapter -> com.spacecaker.butter.ui.adapters.TrackAdapter:
    android.graphics.drawable.AnimationDrawable mPeakOneAnimation -> a
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> b
    java.lang.ref.WeakReference holderReference -> c
    android.view.View$OnClickListener showContextMenu -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.spacecaker.butter.ui.adapters.TrackAdapter$1 -> com.spacecaker.butter.ui.adapters.d:
    com.spacecaker.butter.ui.adapters.TrackAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.AudioPlayerFragment -> com.spacecaker.butter.ui.fragments.AudioPlayerFragment:
    android.widget.TextView mTrackName -> b
    android.widget.TextView mAlbumArtistName -> c
    android.widget.TextView mTotalTime -> d
    android.widget.TextView mCurrentTime -> e
    android.widget.ImageView mAlbumArt -> f
    android.widget.ImageButton mRepeat -> g
    android.widget.ImageButton mPlay -> h
    android.widget.ImageButton mShuffle -> i
    com.spacecaker.butter.ui.widgets.RepeatingImageButton mPrev -> j
    com.spacecaker.butter.ui.widgets.RepeatingImageButton mNext -> k
    android.widget.SeekBar mProgress -> l
    long mDuration -> m
    long mLastSeekEventTime -> n
    long mPosOverride -> o
    long mStartSeekPos -> p
    boolean mFromTouch -> q
    boolean paused -> r
    android.view.View root -> a
    android.widget.Toast mToast -> s
    android.content.BroadcastReceiver mStatusListener -> t
    com.spacecaker.butter.ui.widgets.RepeatingImageButton$RepeatListener mRewListener -> u
    com.spacecaker.butter.ui.widgets.RepeatingImageButton$RepeatListener mFfwdListener -> v
    android.os.Handler mHandler -> w
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> x
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void setRepeatButtonImage() -> a
    void setShuffleButtonImage() -> b
    void setPauseButtonImage() -> c
    void queueNextRefresh(long) -> a
    long refreshNow() -> d
    android.os.Handler access$0(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> a
    void access$1(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> b
    void access$2(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> c
    void access$3(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> d
    void access$4(com.spacecaker.butter.ui.fragments.AudioPlayerFragment,int,long) -> a
    void access$5(com.spacecaker.butter.ui.fragments.AudioPlayerFragment,int,long) -> b
    long access$6(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> e
    void access$7(com.spacecaker.butter.ui.fragments.AudioPlayerFragment,long) -> a
    void access$8(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> f
    void access$9(com.spacecaker.butter.ui.fragments.AudioPlayerFragment,long) -> b
    void access$10(com.spacecaker.butter.ui.fragments.AudioPlayerFragment,boolean) -> a
    long access$11(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> g
    long access$12(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> h
    void access$13(com.spacecaker.butter.ui.fragments.AudioPlayerFragment,long) -> c
    long access$14(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> i
    boolean access$15(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> j
    void access$16(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> k
    void access$17(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> l
    void access$18(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> m
    void access$19(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> n
    void access$20(com.spacecaker.butter.ui.fragments.AudioPlayerFragment) -> o
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$1 -> com.spacecaker.butter.ui.fragments.a:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$10 -> com.spacecaker.butter.ui.fragments.b:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$11 -> com.spacecaker.butter.ui.fragments.c:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$12 -> com.spacecaker.butter.ui.fragments.d:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$2 -> com.spacecaker.butter.ui.fragments.e:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onRepeat(android.view.View,long,int) -> onRepeat
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$3 -> com.spacecaker.butter.ui.fragments.f:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onRepeat(android.view.View,long,int) -> onRepeat
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$4 -> com.spacecaker.butter.ui.fragments.g:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$5 -> com.spacecaker.butter.ui.fragments.h:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$6 -> com.spacecaker.butter.ui.fragments.i:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$7 -> com.spacecaker.butter.ui.fragments.j:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$8 -> com.spacecaker.butter.ui.fragments.k:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.AudioPlayerFragment$9 -> com.spacecaker.butter.ui.fragments.l:
    com.spacecaker.butter.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.BottomActionBarFragment -> com.spacecaker.butter.ui.fragments.BottomActionBarFragment:
    android.widget.ImageButton mPrev -> a
    android.widget.ImageButton mPlay -> b
    android.widget.ImageButton mNext -> c
    com.spacecaker.butter.ui.widgets.BottomActionBar mBottomActionBar -> d
    android.content.BroadcastReceiver mMediaStatusReceiver -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onStop() -> onStop
    void setPauseButtonImage() -> a
    com.spacecaker.butter.ui.widgets.BottomActionBar access$0(com.spacecaker.butter.ui.fragments.BottomActionBarFragment) -> a
    void access$1(com.spacecaker.butter.ui.fragments.BottomActionBarFragment) -> b
    void access$2(com.spacecaker.butter.ui.fragments.BottomActionBarFragment) -> c
com.spacecaker.butter.ui.fragments.BottomActionBarFragment$1 -> com.spacecaker.butter.ui.fragments.m:
    com.spacecaker.butter.ui.fragments.BottomActionBarFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.ui.fragments.BottomActionBarFragment$2 -> com.spacecaker.butter.ui.fragments.n:
    com.spacecaker.butter.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.BottomActionBarFragment$3 -> com.spacecaker.butter.ui.fragments.o:
    com.spacecaker.butter.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.BottomActionBarFragment$4 -> com.spacecaker.butter.ui.fragments.p:
    com.spacecaker.butter.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.fragments.grid.AlbumsFragment -> com.spacecaker.butter.ui.fragments.grid.AlbumsFragment:
    com.spacecaker.butter.ui.adapters.AlbumAdapter mAlbumAdapter -> a
    android.widget.GridView mGridView -> b
    android.database.Cursor mCursor -> c
    int PLAY_SELECTION -> d
    int ADD_TO_PLAYLIST -> e
    int SEARCH -> f
    java.lang.String mCurrentAlbumId -> g
    int mAlbumIdIndex -> mAlbumIdIndex
    int mAlbumNameIndex -> mAlbumNameIndex
    int mArtistNameIndex -> mArtistNameIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> h
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    android.view.View setHeaderLayout() -> setHeaderLayout
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.GridView access$1(com.spacecaker.butter.ui.fragments.grid.AlbumsFragment) -> a
    com.spacecaker.butter.ui.adapters.AlbumAdapter access$2(com.spacecaker.butter.ui.fragments.grid.AlbumsFragment) -> b
com.spacecaker.butter.ui.fragments.grid.AlbumsFragment$1 -> com.spacecaker.butter.ui.fragments.grid.a:
    com.spacecaker.butter.ui.fragments.grid.AlbumsFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.ui.fragments.grid.ArtistsFragment -> com.spacecaker.butter.ui.fragments.grid.ArtistsFragment:
    com.spacecaker.butter.ui.adapters.ArtistAdapter mArtistAdapter -> a
    android.widget.GridView mGridView -> b
    android.database.Cursor mCursor -> c
    int PLAY_SELECTION -> d
    int ADD_TO_PLAYLIST -> e
    int SEARCH -> f
    java.lang.String mCurrentArtistId -> g
    java.lang.String mCurrentAlbumId -> h
    int mArtistIdIndex -> mArtistIdIndex
    int mArtistNameIndex -> mArtistNameIndex
    int mArtistNumAlbumsIndex -> mArtistNumAlbumsIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> i
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onStart() -> onStart
    void onStop() -> onStop
    android.view.View setHeaderLayout() -> setHeaderLayout
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.GridView access$1(com.spacecaker.butter.ui.fragments.grid.ArtistsFragment) -> a
    com.spacecaker.butter.ui.adapters.ArtistAdapter access$2(com.spacecaker.butter.ui.fragments.grid.ArtistsFragment) -> b
com.spacecaker.butter.ui.fragments.grid.ArtistsFragment$1 -> com.spacecaker.butter.ui.fragments.grid.b:
    com.spacecaker.butter.ui.fragments.grid.ArtistsFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment -> com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment:
    com.spacecaker.butter.ui.adapters.QuickQueueAdapter mQuickQueueAdapter -> a
    android.widget.GridView mGridView -> b
    android.database.Cursor mCursor -> c
    int mSelectedPosition -> d
    int PLAY_SELECTION -> e
    int REMOVE -> f
    int mTitleIndex -> mTitleIndex
    int mAlbumIndex -> mAlbumIndex
    int mArtistIndex -> mArtistIndex
    int mMediaIdIndex -> mMediaIdIndex
    int mAlbumIdIndex -> mAlbumIdIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> g
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.GridView access$1(com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment) -> a
    com.spacecaker.butter.ui.adapters.QuickQueueAdapter access$2(com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment) -> b
com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment$1 -> com.spacecaker.butter.ui.fragments.grid.c:
    com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment access$0(com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment$1) -> a
com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment$1$1 -> com.spacecaker.butter.ui.fragments.grid.d:
    com.spacecaker.butter.ui.fragments.grid.QuickQueueFragment$1 this$1 -> a
    void run() -> run
com.spacecaker.butter.ui.fragments.list.ArtistAlbumsFragment -> com.spacecaker.butter.ui.fragments.list.ArtistAlbumsFragment:
    com.spacecaker.butter.ui.adapters.ArtistAlbumAdapter mArtistAlbumAdapter -> a
    int mAlbumIdIndex -> mAlbumIdIndex
    int mAlbumNameIndex -> mAlbumNameIndex
    int mSongCountIndex -> mSongCountIndex
    int mArtistNameIndex -> mArtistNameIndex
    android.widget.ListView mListView -> b
    int PLAY_SELECTION -> c
    int ADD_TO_PLAYLIST -> d
    int SEARCH -> e
    java.lang.String mCurrentAlbumId -> f
    android.database.Cursor mCursor -> g
    android.content.BroadcastReceiver mMediaStatusReceiver -> h
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    android.view.View setHeaderLayout() -> setHeaderLayout
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.ListView access$1(com.spacecaker.butter.ui.fragments.list.ArtistAlbumsFragment) -> a
    com.spacecaker.butter.ui.adapters.ArtistAlbumAdapter access$2(com.spacecaker.butter.ui.fragments.list.ArtistAlbumsFragment) -> b
com.spacecaker.butter.ui.fragments.list.ArtistAlbumsFragment$1 -> com.spacecaker.butter.ui.fragments.list.a:
    com.spacecaker.butter.ui.fragments.list.ArtistAlbumsFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.ui.fragments.list.GenresFragment -> com.spacecaker.butter.ui.fragments.list.GenresFragment:
    com.spacecaker.butter.ui.adapters.GenreAdapter mGenreAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    java.lang.String mCurrentGenreId -> d
    int PLAY_SELECTION -> e
    int mGenreIdIndex -> mGenreIdIndex
    int mGenreNameIndex -> mGenreNameIndex
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
com.spacecaker.butter.ui.fragments.list.PlaylistsFragment -> com.spacecaker.butter.ui.fragments.list.PlaylistsFragment:
    com.spacecaker.butter.ui.adapters.PlaylistAdapter mPlaylistAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    java.lang.String mCurrentPlaylistId -> d
    int mPlaylistNameIndex -> mPlaylistNameIndex
    int mPlaylistIdIndex -> mPlaylistIdIndex
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
com.spacecaker.butter.ui.fragments.list.RecentlyAddedFragment -> com.spacecaker.butter.ui.fragments.list.RecentlyAddedFragment:
    com.spacecaker.butter.ui.adapters.RecentlyAddedAdapter mRecentlyAddedAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    int mTitleIndex -> mTitleIndex
    int mAlbumIndex -> mAlbumIndex
    int mAlbumIdIndex -> mAlbumIdIndex
    int mArtistIndex -> mArtistIndex
    int mMediaIdIndex -> mMediaIdIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> d
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.ListView access$1(com.spacecaker.butter.ui.fragments.list.RecentlyAddedFragment) -> a
    com.spacecaker.butter.ui.adapters.RecentlyAddedAdapter access$2(com.spacecaker.butter.ui.fragments.list.RecentlyAddedFragment) -> b
com.spacecaker.butter.ui.fragments.list.RecentlyAddedFragment$1 -> com.spacecaker.butter.ui.fragments.list.b:
    com.spacecaker.butter.ui.fragments.list.RecentlyAddedFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.spacecaker.butter.ui.fragments.list.TracksFragment -> com.spacecaker.butter.ui.fragments.list.TracksFragment:
    com.spacecaker.butter.ui.adapters.TrackAdapter mTrackAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    long mPlaylistId -> d
    int mSelectedPosition -> e
    long mSelectedId -> f
    int PLAY_SELECTION -> g
    int USE_AS_RINGTONE -> h
    int ADD_TO_PLAYLIST -> i
    int SEARCH -> j
    int REMOVE -> k
    boolean mEditMode -> l
    int mTitleIndex -> mTitleIndex
    int mAlbumIndex -> mAlbumIndex
    int mArtistIndex -> mArtistIndex
    int mMediaIdIndex -> mMediaIdIndex
    android.content.BroadcastReceiver mMediaStatusReceiver -> m
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void refresh() -> refresh
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void reloadQueueCursor() -> a
    void isEditMode() -> isEditMode
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.ListView access$1(com.spacecaker.butter.ui.fragments.list.TracksFragment) -> a
    com.spacecaker.butter.ui.adapters.TrackAdapter access$2(com.spacecaker.butter.ui.fragments.list.TracksFragment) -> b
    long access$3(com.spacecaker.butter.ui.fragments.list.TracksFragment) -> c
com.spacecaker.butter.ui.fragments.list.TracksFragment$1 -> com.spacecaker.butter.ui.fragments.list.c:
    com.spacecaker.butter.ui.fragments.list.TracksFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.spacecaker.butter.ui.fragments.list.TracksFragment access$0(com.spacecaker.butter.ui.fragments.list.TracksFragment$1) -> a
com.spacecaker.butter.ui.fragments.list.TracksFragment$1$1 -> com.spacecaker.butter.ui.fragments.list.d:
    com.spacecaker.butter.ui.fragments.list.TracksFragment$1 this$1 -> a
    void run() -> run
com.spacecaker.butter.ui.widgets.BottomActionBar -> com.spacecaker.butter.ui.widgets.BottomActionBar:
    void updateBottomActionBar(android.app.Activity) -> updateBottomActionBar
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
com.spacecaker.butter.ui.widgets.RepeatingImageButton -> com.spacecaker.butter.ui.widgets.RepeatingImageButton:
    long mStartTime -> a
    int mRepeatCount -> b
    com.spacecaker.butter.ui.widgets.RepeatingImageButton$RepeatListener mListener -> c
    long mInterval -> d
    java.lang.Runnable mRepeater -> e
    void setRepeatListener(com.spacecaker.butter.ui.widgets.RepeatingImageButton$RepeatListener,long) -> setRepeatListener
    boolean performLongClick() -> performLongClick
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void doRepeat(boolean) -> a
    void access$0$15d91ce7(com.spacecaker.butter.ui.widgets.RepeatingImageButton) -> a
    long access$1(com.spacecaker.butter.ui.widgets.RepeatingImageButton) -> b
com.spacecaker.butter.ui.widgets.RepeatingImageButton$1 -> com.spacecaker.butter.ui.widgets.a:
    com.spacecaker.butter.ui.widgets.RepeatingImageButton this$0 -> a
    void run() -> run
com.spacecaker.butter.ui.widgets.RepeatingImageButton$RepeatListener -> com.spacecaker.butter.ui.widgets.RepeatingImageButton$RepeatListener:
    void onRepeat(android.view.View,long,int) -> onRepeat
com.spacecaker.butter.ui.widgets.ScrollableTabView -> com.spacecaker.butter.ui.widgets.ScrollableTabView:
    android.support.v4.view.ViewPager mPager -> a
    com.spacecaker.butter.ui.adapters.TabAdapter mAdapter -> b
    android.widget.LinearLayout mContainer -> c
    java.util.ArrayList mTabs -> d
    void setAdapter(com.spacecaker.butter.ui.adapters.TabAdapter) -> setAdapter
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void initTabs() -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onLayout(boolean,int,int,int,int) -> onLayout
    void selectTab(int) -> a
    android.support.v4.view.ViewPager access$0(com.spacecaker.butter.ui.widgets.ScrollableTabView) -> a
    void access$1(com.spacecaker.butter.ui.widgets.ScrollableTabView,int) -> a
com.spacecaker.butter.ui.widgets.ScrollableTabView$1 -> com.spacecaker.butter.ui.widgets.b:
    com.spacecaker.butter.ui.widgets.ScrollableTabView this$0 -> a
    int val$index -> b
    void onClick(android.view.View) -> onClick
com.spacecaker.butter.ui.widgets.VisualizerView -> com.spacecaker.butter.ui.widgets.VisualizerView:
    byte[] mBytes -> d
    byte[] mFFTBytes -> e
    android.graphics.Rect mRect -> f
    com.spacecaker.butter.helpers.visualizer.Renderer mRenderer -> g
    java.lang.String type -> a
    android.graphics.Bitmap mCanvasBitmap -> b
    android.graphics.Canvas mCanvas -> c
    void updateVisualizer(byte[]) -> updateVisualizer
    void updateVisualizerFFT(byte[]) -> updateVisualizerFFT
    void onDraw(android.graphics.Canvas) -> onDraw
com.spacecaker.butter.views.ViewHolderGrid -> com.spacecaker.butter.views.ViewHolderGrid:
    android.widget.ImageView mViewHolderImage -> mViewHolderImage
    android.widget.ImageView mPeakOne -> mPeakOne
    android.widget.ImageView mPeakTwo -> mPeakTwo
    android.widget.TextView mViewHolderLineOne -> mViewHolderLineOne
    android.widget.TextView mViewHolderLineTwo -> mViewHolderLineTwo
    android.widget.LinearLayout mInfoHolder -> mInfoHolder
com.spacecaker.butter.views.ViewHolderList -> com.spacecaker.butter.views.ViewHolderList:
    android.widget.ImageView mViewHolderImage -> mViewHolderImage
    android.widget.ImageView mPeakOne -> mPeakOne
    android.widget.ImageView mPeakTwo -> mPeakTwo
    android.widget.ImageView mQuickContextDivider -> mQuickContextDivider
    android.widget.ImageView mQuickContextTip -> mQuickContextTip
    android.widget.TextView mViewHolderLineOne -> mViewHolderLineOne
    android.widget.TextView mViewHolderLineTwo -> mViewHolderLineTwo
    android.widget.FrameLayout mQuickContext -> mQuickContext
com.spacecaker.butter.views.ViewHolderQueue -> com.spacecaker.butter.views.ViewHolderQueue:
    android.widget.ImageView mArtistImage -> mArtistImage
    android.widget.ImageView mPeakOne -> mPeakOne
    android.widget.ImageView mPeakTwo -> mPeakTwo
    android.widget.ImageView mAlbumArt -> mAlbumArt
    android.widget.TextView mTrackName -> mTrackName
